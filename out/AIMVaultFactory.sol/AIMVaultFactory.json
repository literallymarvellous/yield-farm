{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "VaultDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "deployVault",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getVaultFromUnderlying",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "isVaultDeployed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516128b73803806128b783398101604081905261002f9161007e565b600080546001600160a01b0319166001600160a01b03831690811782556040518392907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506100ae565b60006020828403121561009057600080fd5b81516001600160a01b03811681146100a757600080fd5b9392505050565b6127fa806100bd6000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806313af4035146200006f5780633e63576b14620000885780637d6020f414620000bc5780638da5cb5b14620000ed578063a622ee7c1462000101578063a6ca403a146200012d575b600080fd5b62000086620000803660046200043b565b62000144565b005b6200009f6200009936600462000462565b620001de565b6040516001600160a01b0390911681526020015b60405180910390f35b620000dc620000cd3660046200043b565b6001600160a01b03163b151590565b6040519015158152602001620000b3565b6000546200009f906001600160a01b031681565b6200009f620001123660046200043b565b6001602052600090815260409020546001600160a01b031681565b6200009f6200013e36600462000462565b62000311565b6000546001600160a01b03163314620001935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600080546001600160a01b031633146200022a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016200018a565b606084901b6001600160601b0319168484846040516200024a9062000414565b6001600160a01b039384168152918316602083015290911660408201526060018190604051809103906000f59050801580156200028b573d6000803e3d6000fd5b50604080516001600160a01b038381168252878116602083015286168183015290519192507f26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b919081900360600190a16001600160a01b03938416600090815260016020526040902080546001600160a01b031916948216949094179093555090919050565b60006200040c6001600160f81b031930606087901b6001600160601b031916604051620003416020820162000414565b601f1982820381018352601f9091011660408181526001600160a01b038b811660208401528a8116918301919091528816606082015260800160408051601f19818403018152908290526200039a9291602001620004e6565b60405160208183030381529060405280519060200120604051602001620003f394939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012090565b949350505050565b6122c5806200050083390190565b6001600160a01b03811681146200043857600080fd5b50565b6000602082840312156200044e57600080fd5b81356200045b8162000422565b9392505050565b6000806000606084860312156200047857600080fd5b8335620004858162000422565b92506020840135620004978162000422565b91506040840135620004a98162000422565b809150509250925092565b6000815160005b81811015620004d75760208185018101518683015201620004bb565b50600093019283525090919050565b60006200040c620004f88386620004b4565b84620004b456fe6101406040523480156200001257600080fd5b50604051620022c5380380620022c583398101604081905262000035916200030d565b8083846001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000a091908101906200039d565b604051602001620000b2919062000455565b604051602081830303815290604052856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000100573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200012a91908101906200039d565b6040516020016200013c919062000493565b6040516020818303038152906040528181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b29190620004bf565b6000620001c084826200057a565b506001620001cf83826200057a565b5060ff81166080524660a052620001e562000258565b60c052505050506001600160a01b0391821660e05250600680546001600160a01b03191691831691821790556040516000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506001600160a01b03918216610100521661012052620006c4565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200028c919062000646565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03811681146200030a57600080fd5b50565b6000806000606084860312156200032357600080fd5b83516200033081620002f4565b60208501519093506200034381620002f4565b60408501519092506200035681620002f4565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003945781810151838201526020016200037a565b50506000910152565b600060208284031215620003b057600080fd5b81516001600160401b0380821115620003c857600080fd5b818401915084601f830112620003dd57600080fd5b815181811115620003f257620003f262000361565b604051601f8201601f19908116603f011681019083821181831017156200041d576200041d62000361565b816040528281528760208487010111156200043757600080fd5b6200044a83602083016020880162000377565b979650505050505050565b63020b4b6960e51b8152600082516200047681600485016020870162000377565b650815985d5b1d60d21b6004939091019283015250600a01919050565b6130bb60f11b815260008251620004b281600285016020870162000377565b9190910160020192915050565b600060208284031215620004d257600080fd5b815160ff81168114620004e457600080fd5b9392505050565b600181811c908216806200050057607f821691505b6020821081036200052157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200057557600081815260208120601f850160051c81016020861015620005505750805b601f850160051c820191505b8181101562000571578281556001016200055c565b5050505b505050565b81516001600160401b0381111562000596576200059662000361565b620005ae81620005a78454620004eb565b8462000527565b602080601f831160018114620005e65760008415620005cd5750858301515b600019600386901b1c1916600185901b17855562000571565b600085815260208120601f198616915b828110156200061757888601518255948401946001909101908401620005f6565b5085821015620006365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200065681620004eb565b600182811680156200067157600181146200068757620006b8565b60ff1984168752821515830287019450620006b8565b8760005260208060002060005b85811015620006af5781548a82015290840190820162000694565b50505082870194505b50929695505050505050565b60805160a05160c05160e0516101005161012051611b5d620007686000396000818161039d0152818161063f015281816106c5015281816111f601528181611434015281816114e701526115f301526000818161049901528181610b2b015261146301526000818161033601528181610a8a01528181610bdf01528181610dda0152610f31015260006109de015260006109ae015260006102f50152611b5d6000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637ecebe0011610125578063c5d664c6116100ad578063d505accf1161007c578063d505accf146104e1578063d905777e146104f4578063da55602b1461051d578063dd62ed3e14610525578063ef8b30f71461055057600080fd5b8063c5d664c614610494578063c63d75b614610370578063c6e6f592146104bb578063ce96cb77146104ce57600080fd5b806395d89b41116100f457806395d89b4114610440578063a9059cbb14610448578063b3d7f6b91461045b578063b460af941461046e578063ba0876521461048157600080fd5b80637ecebe00146103f2578063841219e5146104125780638da5cb5b1461041a57806394bf804d1461042d57600080fd5b806323b872dd116101a8578063402d267d11610177578063402d267d146103705780634cdad5061461038557806369e527da146103985780636e553f65146103bf57806370a08231146103d257600080fd5b806323b872dd146102dd578063313ce567146102f05780633644e5151461032957806338d52e0f1461033157600080fd5b8063095ea7b3116101ef578063095ea7b3146102815780630a28a477146102a457806313af4035146102b757806318160ddd146102cc57806321f56a57146102d557600080fd5b806301e1d1141461022157806306fdde031461023c57806307a2d13a1461025157806308bf795214610264575b600080fd5b610229610563565b6040519081526020015b60405180910390f35b61024461057f565b604051610233919061178c565b61022961025f3660046117da565b61060d565b61026c61063a565b60408051928352602083019190915201610233565b61029461028f36600461180f565b61074d565b6040519015158152602001610233565b6102296102b23660046117da565b6107ba565b6102ca6102c5366004611839565b6107da565b005b61022960025481565b6102ca610874565b6102946102eb366004611854565b6108ca565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610233565b6102296109aa565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610233565b61022961037e366004611839565b5060001990565b6102296103933660046117da565b610a00565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6102296103cd366004611890565b610a0b565b6102296103e0366004611839565b60036020526000908152604090205481565b610229610400366004611839565b60056020526000908152604090205481565b610229610b13565b600654610358906001600160a01b031681565b61022961043b366004611890565b610b9e565b610244610c61565b61029461045636600461180f565b610c6e565b6102296104693660046117da565b610cd4565b61022961047c3660046118bc565b610cf3565b61022961048f3660046118bc565b610e01565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6102296104c93660046117da565b610f58565b6102296104dc366004611839565b610f78565b6102ca6104ef3660046118f8565b610f9a565b610229610502366004611839565b6001600160a01b031660009081526003602052604090205490565b6102296111de565b61022961053336600461196b565b600460209081526000928352604080842090915290825290205481565b61022961055e3660046117da565b611247565b600061056d610b13565b60075461057a91906119ab565b905090565b6000805461058c906119be565b80601f01602080910402602001604051908101604052809291908181526020018280546105b8906119be565b80156106055780601f106105da57610100808354040283529160200191610605565b820191906000526020600020905b8154815290600101906020018083116105e857829003601f168201915b505050505081565b60025460009080156106315761062c610624610563565b849083611252565b610633565b825b9392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906119f8565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ae9d70b06040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074791906119f8565b90509091565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107a89086815260200190565b60405180910390a35060015b92915050565b60025460009080156106315761062c816107d2610563565b859190611271565b6006546001600160a01b031633146108285760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6006546001600160a01b031633146108bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161081f565b6108c56111de565b600755565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610926576109018382611a11565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061094e908490611a11565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611b08833981519152906109979087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146109db5761057a61129f565b507f000000000000000000000000000000000000000000000000000000000000000090565b60006107b48261060d565b6000610a1683611247565b905080600003610a565760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b604482015260640161081f565b6000610a63600285611a24565b90508060076000828254610a7791906119ab565b90915550610ab290506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611339565b610abc83836113c3565b60408051858152602081018490526001600160a01b0385169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610b0c818361141d565b5092915050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a91906119f8565b6000610ba983610cd4565b90506000610bb8600283611a24565b90508060076000828254610bcc91906119ab565b90915550610c0790506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611339565b610c1183856113c3565b60408051838152602081018690526001600160a01b0385169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610b0c818561141d565b6001805461058c906119be565b33600090815260036020526040812080548391908390610c8f908490611a11565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611b08833981519152906107a89086815260200190565b60025460009080156106315761062c610ceb610563565b849083611271565b6000610cfe846107ba565b9050336001600160a01b03831614610d6e576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610d6c57610d478282611a11565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610d7884826115a4565b610d8282826116b2565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611714565b6000336001600160a01b03831614610e71576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610e6f57610e4a8582611a11565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610e796111de565b600755610e8584610a00565b905080600003610ec55760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b604482015260640161081f565b610ecf81856115a4565b610ed982856116b2565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611714565b60025460009080156106315761062c81610f70610563565b859190611252565b6001600160a01b0381166000908152600360205260408120546107b49061060d565b42841015610fea5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161081f565b60006001610ff66109aa565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611102573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111385750876001600160a01b0316816001600160a01b0316145b6111755760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b604482015260640161081f565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b604051633af9e66960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633af9e669906024016020604051808303816000875af1158015610b7a573d6000803e3d6000fd5b60006107b482610f58565b82820281151584158583048514171661126a57600080fd5b0492915050565b82820281151584158583048514171661128957600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516112d19190611a46565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806113bc5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161081f565b5050505050565b80600260008282546113d591906119ab565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020611b0883398151915291015b60405180910390a35050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156114ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d09190611ae5565b5060405163140e25ad60e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a0712d68906024016020604051808303816000875af1158015611538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155c91906119f8565b156115a05760405162461bcd60e51b815260206004820152601460248201527310d3d3540e8811195c1bdcda5d0811985a5b195960621b604482015260640161081f565b5050565b60006115ae610b13565b9050828110156116ad5760006115c48285611a11565b905080600760008282546115d89190611a11565b909155505060405163852a12e360e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af1158015611644573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166891906119f8565b156116ab5760405162461bcd60e51b815260206004820152601360248201527210d3d3540e8814995919595b4819985a5b1959606a1b604482015260640161081f565b505b505050565b6001600160a01b038216600090815260036020526040812080548392906116da908490611a11565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611b0883398151915290602001611411565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806116ab5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161081f565b600060208083528351808285015260005b818110156117b95785810183015185820160400152820161179d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156117ec57600080fd5b5035919050565b80356001600160a01b038116811461180a57600080fd5b919050565b6000806040838503121561182257600080fd5b61182b836117f3565b946020939093013593505050565b60006020828403121561184b57600080fd5b610633826117f3565b60008060006060848603121561186957600080fd5b611872846117f3565b9250611880602085016117f3565b9150604084013590509250925092565b600080604083850312156118a357600080fd5b823591506118b3602084016117f3565b90509250929050565b6000806000606084860312156118d157600080fd5b833592506118e1602085016117f3565b91506118ef604085016117f3565b90509250925092565b600080600080600080600060e0888a03121561191357600080fd5b61191c886117f3565b965061192a602089016117f3565b95506040880135945060608801359350608088013560ff8116811461194e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561197e57600080fd5b611987836117f3565b91506118b3602084016117f3565b634e487b7160e01b600052601160045260246000fd5b808201808211156107b4576107b4611995565b600181811c908216806119d257607f821691505b6020821081036119f257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a0a57600080fd5b5051919050565b818103818111156107b4576107b4611995565b600082611a4157634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680611a6257607f831692505b60208084108203611a8157634e487b7160e01b86526022600452602486fd5b818015611a955760018114611aaa57611ad7565b60ff1986168952841515850289019650611ad7565b60008a81526020902060005b86811015611acf5781548b820152908501908301611ab6565b505084890196505b509498975050505050505050565b600060208284031215611af757600080fd5b8151801515811461063357600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c17d21c87246b8f10b03ed29828358960b1f3f30a700b73403b49c1f1bee41e164736f6c63430008100033a264697066735822122088278150865cca8909252f5fc18389ae5c1493792b13f14460e8a3b267a0310564736f6c63430008100033",
    "sourceMap": "523:3860:19:-:0;;;826:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:5:10;:14;;-1:-1:-1;;;;;;1037:14:10;-1:-1:-1;;;;;1037:14:10;;;;;;;1067:32;;1037:14;;:5;1067:32;;1037:5;;1067:32;999:107;826:44:19;523:3860;;14:290:23;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:23;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:23:o;:::-;523:3860:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806313af4035146200006f5780633e63576b14620000885780637d6020f414620000bc5780638da5cb5b14620000ed578063a622ee7c1462000101578063a6ca403a146200012d575b600080fd5b62000086620000803660046200043b565b62000144565b005b6200009f6200009936600462000462565b620001de565b6040516001600160a01b0390911681526020015b60405180910390f35b620000dc620000cd3660046200043b565b6001600160a01b03163b151590565b6040519015158152602001620000b3565b6000546200009f906001600160a01b031681565b6200009f620001123660046200043b565b6001602052600090815260409020546001600160a01b031681565b6200009f6200013e36600462000462565b62000311565b6000546001600160a01b03163314620001935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b600080546001600160a01b031633146200022a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016200018a565b606084901b6001600160601b0319168484846040516200024a9062000414565b6001600160a01b039384168152918316602083015290911660408201526060018190604051809103906000f59050801580156200028b573d6000803e3d6000fd5b50604080516001600160a01b038381168252878116602083015286168183015290519192507f26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b919081900360600190a16001600160a01b03938416600090815260016020526040902080546001600160a01b031916948216949094179093555090919050565b60006200040c6001600160f81b031930606087901b6001600160601b031916604051620003416020820162000414565b601f1982820381018352601f9091011660408181526001600160a01b038b811660208401528a8116918301919091528816606082015260800160408051601f19818403018152908290526200039a9291602001620004e6565b60405160208183030381529060405280519060200120604051602001620003f394939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012090565b949350505050565b6122c5806200050083390190565b6001600160a01b03811681146200043857600080fd5b50565b6000602082840312156200044e57600080fd5b81356200045b8162000422565b9392505050565b6000806000606084860312156200047857600080fd5b8335620004858162000422565b92506020840135620004978162000422565b91506040840135620004a98162000422565b809150509250925092565b6000815160005b81811015620004d75760208185018101518683015201620004bb565b50600093019283525090919050565b60006200040c620004f88386620004b4565b84620004b456fe6101406040523480156200001257600080fd5b50604051620022c5380380620022c583398101604081905262000035916200030d565b8083846001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000a091908101906200039d565b604051602001620000b2919062000455565b604051602081830303815290604052856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000100573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200012a91908101906200039d565b6040516020016200013c919062000493565b6040516020818303038152906040528181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b29190620004bf565b6000620001c084826200057a565b506001620001cf83826200057a565b5060ff81166080524660a052620001e562000258565b60c052505050506001600160a01b0391821660e05250600680546001600160a01b03191691831691821790556040516000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506001600160a01b03918216610100521661012052620006c4565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200028c919062000646565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03811681146200030a57600080fd5b50565b6000806000606084860312156200032357600080fd5b83516200033081620002f4565b60208501519093506200034381620002f4565b60408501519092506200035681620002f4565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003945781810151838201526020016200037a565b50506000910152565b600060208284031215620003b057600080fd5b81516001600160401b0380821115620003c857600080fd5b818401915084601f830112620003dd57600080fd5b815181811115620003f257620003f262000361565b604051601f8201601f19908116603f011681019083821181831017156200041d576200041d62000361565b816040528281528760208487010111156200043757600080fd5b6200044a83602083016020880162000377565b979650505050505050565b63020b4b6960e51b8152600082516200047681600485016020870162000377565b650815985d5b1d60d21b6004939091019283015250600a01919050565b6130bb60f11b815260008251620004b281600285016020870162000377565b9190910160020192915050565b600060208284031215620004d257600080fd5b815160ff81168114620004e457600080fd5b9392505050565b600181811c908216806200050057607f821691505b6020821081036200052157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200057557600081815260208120601f850160051c81016020861015620005505750805b601f850160051c820191505b8181101562000571578281556001016200055c565b5050505b505050565b81516001600160401b0381111562000596576200059662000361565b620005ae81620005a78454620004eb565b8462000527565b602080601f831160018114620005e65760008415620005cd5750858301515b600019600386901b1c1916600185901b17855562000571565b600085815260208120601f198616915b828110156200061757888601518255948401946001909101908401620005f6565b5085821015620006365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200065681620004eb565b600182811680156200067157600181146200068757620006b8565b60ff1984168752821515830287019450620006b8565b8760005260208060002060005b85811015620006af5781548a82015290840190820162000694565b50505082870194505b50929695505050505050565b60805160a05160c05160e0516101005161012051611b5d620007686000396000818161039d0152818161063f015281816106c5015281816111f601528181611434015281816114e701526115f301526000818161049901528181610b2b015261146301526000818161033601528181610a8a01528181610bdf01528181610dda0152610f31015260006109de015260006109ae015260006102f50152611b5d6000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637ecebe0011610125578063c5d664c6116100ad578063d505accf1161007c578063d505accf146104e1578063d905777e146104f4578063da55602b1461051d578063dd62ed3e14610525578063ef8b30f71461055057600080fd5b8063c5d664c614610494578063c63d75b614610370578063c6e6f592146104bb578063ce96cb77146104ce57600080fd5b806395d89b41116100f457806395d89b4114610440578063a9059cbb14610448578063b3d7f6b91461045b578063b460af941461046e578063ba0876521461048157600080fd5b80637ecebe00146103f2578063841219e5146104125780638da5cb5b1461041a57806394bf804d1461042d57600080fd5b806323b872dd116101a8578063402d267d11610177578063402d267d146103705780634cdad5061461038557806369e527da146103985780636e553f65146103bf57806370a08231146103d257600080fd5b806323b872dd146102dd578063313ce567146102f05780633644e5151461032957806338d52e0f1461033157600080fd5b8063095ea7b3116101ef578063095ea7b3146102815780630a28a477146102a457806313af4035146102b757806318160ddd146102cc57806321f56a57146102d557600080fd5b806301e1d1141461022157806306fdde031461023c57806307a2d13a1461025157806308bf795214610264575b600080fd5b610229610563565b6040519081526020015b60405180910390f35b61024461057f565b604051610233919061178c565b61022961025f3660046117da565b61060d565b61026c61063a565b60408051928352602083019190915201610233565b61029461028f36600461180f565b61074d565b6040519015158152602001610233565b6102296102b23660046117da565b6107ba565b6102ca6102c5366004611839565b6107da565b005b61022960025481565b6102ca610874565b6102946102eb366004611854565b6108ca565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610233565b6102296109aa565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610233565b61022961037e366004611839565b5060001990565b6102296103933660046117da565b610a00565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6102296103cd366004611890565b610a0b565b6102296103e0366004611839565b60036020526000908152604090205481565b610229610400366004611839565b60056020526000908152604090205481565b610229610b13565b600654610358906001600160a01b031681565b61022961043b366004611890565b610b9e565b610244610c61565b61029461045636600461180f565b610c6e565b6102296104693660046117da565b610cd4565b61022961047c3660046118bc565b610cf3565b61022961048f3660046118bc565b610e01565b6103587f000000000000000000000000000000000000000000000000000000000000000081565b6102296104c93660046117da565b610f58565b6102296104dc366004611839565b610f78565b6102ca6104ef3660046118f8565b610f9a565b610229610502366004611839565b6001600160a01b031660009081526003602052604090205490565b6102296111de565b61022961053336600461196b565b600460209081526000928352604080842090915290825290205481565b61022961055e3660046117da565b611247565b600061056d610b13565b60075461057a91906119ab565b905090565b6000805461058c906119be565b80601f01602080910402602001604051908101604052809291908181526020018280546105b8906119be565b80156106055780601f106105da57610100808354040283529160200191610605565b820191906000526020600020905b8154815290600101906020018083116105e857829003601f168201915b505050505081565b60025460009080156106315761062c610624610563565b849083611252565b610633565b825b9392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906119f8565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ae9d70b06040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610723573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074791906119f8565b90509091565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107a89086815260200190565b60405180910390a35060015b92915050565b60025460009080156106315761062c816107d2610563565b859190611271565b6006546001600160a01b031633146108285760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6006546001600160a01b031633146108bd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161081f565b6108c56111de565b600755565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610926576109018382611a11565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061094e908490611a11565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611b08833981519152906109979087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146109db5761057a61129f565b507f000000000000000000000000000000000000000000000000000000000000000090565b60006107b48261060d565b6000610a1683611247565b905080600003610a565760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b604482015260640161081f565b6000610a63600285611a24565b90508060076000828254610a7791906119ab565b90915550610ab290506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611339565b610abc83836113c3565b60408051858152602081018490526001600160a01b0385169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610b0c818361141d565b5092915050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a91906119f8565b6000610ba983610cd4565b90506000610bb8600283611a24565b90508060076000828254610bcc91906119ab565b90915550610c0790506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611339565b610c1183856113c3565b60408051838152602081018690526001600160a01b0385169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3610b0c818561141d565b6001805461058c906119be565b33600090815260036020526040812080548391908390610c8f908490611a11565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611b08833981519152906107a89086815260200190565b60025460009080156106315761062c610ceb610563565b849083611271565b6000610cfe846107ba565b9050336001600160a01b03831614610d6e576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610d6c57610d478282611a11565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610d7884826115a4565b610d8282826116b2565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611714565b6000336001600160a01b03831614610e71576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610e6f57610e4a8582611a11565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610e796111de565b600755610e8584610a00565b905080600003610ec55760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b604482015260640161081f565b610ecf81856115a4565b610ed982856116b2565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611714565b60025460009080156106315761062c81610f70610563565b859190611252565b6001600160a01b0381166000908152600360205260408120546107b49061060d565b42841015610fea5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161081f565b60006001610ff66109aa565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611102573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111385750876001600160a01b0316816001600160a01b0316145b6111755760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b604482015260640161081f565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b604051633af9e66960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633af9e669906024016020604051808303816000875af1158015610b7a573d6000803e3d6000fd5b60006107b482610f58565b82820281151584158583048514171661126a57600080fd5b0492915050565b82820281151584158583048514171661128957600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516112d19190611a46565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806113bc5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161081f565b5050505050565b80600260008282546113d591906119ab565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020611b0883398151915291015b60405180910390a35050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156114ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d09190611ae5565b5060405163140e25ad60e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a0712d68906024016020604051808303816000875af1158015611538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155c91906119f8565b156115a05760405162461bcd60e51b815260206004820152601460248201527310d3d3540e8811195c1bdcda5d0811985a5b195960621b604482015260640161081f565b5050565b60006115ae610b13565b9050828110156116ad5760006115c48285611a11565b905080600760008282546115d89190611a11565b909155505060405163852a12e360e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af1158015611644573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166891906119f8565b156116ab5760405162461bcd60e51b815260206004820152601360248201527210d3d3540e8814995919595b4819985a5b1959606a1b604482015260640161081f565b505b505050565b6001600160a01b038216600090815260036020526040812080548392906116da908490611a11565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611b0883398151915290602001611411565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806116ab5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161081f565b600060208083528351808285015260005b818110156117b95785810183015185820160400152820161179d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156117ec57600080fd5b5035919050565b80356001600160a01b038116811461180a57600080fd5b919050565b6000806040838503121561182257600080fd5b61182b836117f3565b946020939093013593505050565b60006020828403121561184b57600080fd5b610633826117f3565b60008060006060848603121561186957600080fd5b611872846117f3565b9250611880602085016117f3565b9150604084013590509250925092565b600080604083850312156118a357600080fd5b823591506118b3602084016117f3565b90509250929050565b6000806000606084860312156118d157600080fd5b833592506118e1602085016117f3565b91506118ef604085016117f3565b90509250925092565b600080600080600080600060e0888a03121561191357600080fd5b61191c886117f3565b965061192a602089016117f3565b95506040880135945060608801359350608088013560ff8116811461194e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561197e57600080fd5b611987836117f3565b91506118b3602084016117f3565b634e487b7160e01b600052601160045260246000fd5b808201808211156107b4576107b4611995565b600181811c908216806119d257607f821691505b6020821081036119f257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a0a57600080fd5b5051919050565b818103818111156107b4576107b4611995565b600082611a4157634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680611a6257607f831692505b60208084108203611a8157634e487b7160e01b86526022600452602486fd5b818015611a955760018114611aaa57611ad7565b60ff1986168952841515850289019650611ad7565b60008a81526020902060005b86811015611acf5781548b820152908501908301611ab6565b505084890196505b509498975050505050505050565b600060208284031215611af757600080fd5b8151801515811461063357600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220c17d21c87246b8f10b03ed29828358960b1f3f30a700b73403b49c1f1bee41e164736f6c63430008100033a264697066735822122088278150865cca8909252f5fc18389ae5c1493792b13f14460e8a3b267a0310564736f6c63430008100033",
    "sourceMap": "523:3860:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:144:10;;;;;;:::i;:::-;;:::i;:::-;;1636:636:19;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1133:32:23;;;1115:51;;1103:2;1088:18;1636:636:19;;;;;;;;4257:124;;;;;;:::i;:::-;-1:-1:-1;;;;;4344:26:19;;:30;;;4257:124;;;;1612:14:23;;1605:22;1587:41;;1575:2;1560:18;4257:124:19;1447:187:23;682:20:10;;;;;-1:-1:-1;;;;;682:20:10;;;690:40:19;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;690:40:19;;;2672:1158;;;;;;:::i;:::-;;:::i;1296:144:10:-;770:5;;-1:-1:-1;;;;;770:5:10;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:10;;2316:2:23;748:44:10;;;2298:21:23;2355:2;2335:18;;;2328:30;-1:-1:-1;;;2374:18:23;;;2367:42;2426:18;;748:44:10;;;;;;;;;1367:5:::1;:16:::0;;-1:-1:-1;;;;;;1367:16:10::1;-1:-1:-1::0;;;;;1367:16:10;::::1;::::0;;::::1;::::0;;1399:34:::1;::::0;1367:16;;1412:10:::1;::::0;1399:34:::1;::::0;1367:5;1399:34:::1;1296:144:::0;:::o;1636:636:19:-;1764:14;770:5:10;;-1:-1:-1;;;;;770:5:10;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:10;;2316:2:23;748:44:10;;;2298:21:23;2355:2;2335:18;;;2328:30;-1:-1:-1;;;2374:18:23;;;2367:42;2426:18;;748:44:10;2114:336:23;748:44:10;528:21:14;;;;-1:-1:-1;;;;;;528:21:14;2113:10:19::1;2137:6;2157:5;2042:130;;;;;:::i;:::-;-1:-1:-1::0;;;;;2728:15:23;;;2710:34;;2780:15;;;2775:2;2760:18;;2753:43;2832:15;;;2827:2;2812:18;;2805:43;2660:2;2645:18;2042:130:19::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2188:40:19::1;::::0;;-1:-1:-1;;;;;2728:15:23;;;2710:34;;2780:15;;;2775:2;2760:18;;2753:43;2832:15;;2812:18;;;2805:43;2188:40:19;;2728:15:23;;-1:-1:-1;2188:40:19::1;::::0;;;;;2660:2:23;2188:40:19;;::::1;-1:-1:-1::0;;;;;2239:18:19;;::::1;;::::0;;;:6:::1;:18;::::0;;;;:26;;-1:-1:-1;;;;;;2239:26:19::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2239:26:19;;2260:5;-1:-1:-1;1636:636:19:o;2672:1158::-;2806:8;2900:846;-1:-1:-1;;;;;;3110:4:19;528:21:14;;;;-1:-1:-1;;;;;;528:21:14;3452:27:19;;;;;;;:::i;:::-;-1:-1:-1;;3452:27:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2728:15:23;;;3452:27:19;3579:37;;2710:34:23;2780:15;;;2760:18;;;2753:43;;;;2832:15;;2812:18;;;2805:43;2645:18;;3579:37:19;;;-1:-1:-1;;3579:37:19;;;;;;;;;;3338:312;;;3579:37;3338:312;;:::i;:::-;;;;;;;;;;;;;3295:385;;;;;;2935:771;;;;;;;;;;-1:-1:-1;;;;;;4097:26:23;;;;4085:39;;4161:2;4157:15;;;;-1:-1:-1;;;;;;4153:53:23;4149:1;4140:11;;4133:74;4232:2;4223:12;;4216:28;4269:2;4260:12;;4253:28;4306:2;4297:12;;3874:441;2935:771:19;;;;;;;;;;;;;2900:828;;;;;;398:10:14;280:138;2900:846:19;2826:997;2672:1158;-1:-1:-1;;;;2672:1158:19:o;-1:-1:-1:-;;;;;;;;:::o;14:131:23:-;-1:-1:-1;;;;;89:31:23;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:23:o;402:544::-;494:6;502;510;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;618:9;605:23;637:31;662:5;637:31;:::i;:::-;687:5;-1:-1:-1;744:2:23;729:18;;716:32;757:33;716:32;757:33;:::i;:::-;809:7;-1:-1:-1;868:2:23;853:18;;840:32;881:33;840:32;881:33;:::i;:::-;933:7;923:17;;;402:544;;;;;:::o;3281:322::-;3322:3;3360:5;3354:12;3384:1;3394:128;3408:6;3405:1;3402:13;3394:128;;;3505:4;3490:13;;;3486:24;;3480:31;3467:11;;;3460:52;3423:12;3394:128;;;-1:-1:-1;3577:1:23;3541:16;;3566:13;;;-1:-1:-1;3541:16:23;;3281:322;-1:-1:-1;3281:322:23:o;3608:261::-;3783:3;3808:55;3833:29;3858:3;3850:6;3833:29;:::i;:::-;3825:6;3808:55;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deployVault(address,address,address)": "3e63576b",
    "getVaultFromUnderlying(address,address,address)": "a6ca403a",
    "isVaultDeployed(address)": "7d6020f4",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "vaults(address)": "a622ee7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AIMVault\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"VaultDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployVault\",\"outputs\":[{\"internalType\":\"contract AIMVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getVaultFromUnderlying\",\"outputs\":[{\"internalType\":\"contract AIMVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AIMVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"isVaultDeployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"contract AIMVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Transmissions11 and JetJadeja\",\"events\":{\"VaultDeployed(address,address,address)\":{\"params\":{\"cToken\":\"The Compound cToken that the Vault should accept.\",\"underlying\":\"The underlying token the new Vault accepts.\",\"vault\":\"The newly deployed Vault contract.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"The owner of the factory.\"}},\"deployVault(address,address,address)\":{\"details\":\"This will revert if a Vault that accepts the same underlying token has already been deployed.\",\"params\":{\"cToken\":\"The Compound cToken that the Vault should accept.\",\"underlying\":\"The ERC20 token that the Vault should accept.\"},\"returns\":{\"vault\":\"The newly deployed Vault contract which accepts the provided underlying token.\"}},\"getVaultFromUnderlying(address,address,address)\":{\"details\":\"The Vault returned may not be deployed yet. Use isVaultDeployed to check.\",\"params\":{\"cToken\":\"The Compound cToken that the Vault should accept.\",\"underlying\":\"The ERC20 token that the Vault should accept.\"},\"returns\":{\"_0\":\"The address of a Vault which accepts the provided underlying token.\"}},\"isVaultDeployed(address)\":{\"details\":\"This function is useful to check the return values of getVaultFromUnderlying, as it does not check that the Vault addresses it computes have been deployed yet.\",\"params\":{\"vault\":\"The address of a Vault which may not have been deployed yet.\"},\"returns\":{\"_0\":\"A boolean indicating whether the Vault has been deployed already.\"}}},\"title\":\"Rari Vault Factory\",\"version\":1},\"userdoc\":{\"events\":{\"VaultDeployed(address,address,address)\":{\"notice\":\"Emitted when a new Vault is deployed.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates a Vault factory.\"},\"deployVault(address,address,address)\":{\"notice\":\"Deploys a new Vault which supports a specific underlying token.\"},\"getVaultFromUnderlying(address,address,address)\":{\"notice\":\"Computes a Vault's address from its accepted underlying token.\"},\"isVaultDeployed(address)\":{\"notice\":\"Returns if a Vault at an address has already been deployed.\"},\"vaults(address)\":{\"notice\":\"Maps tokens to their vaults\"}},\"notice\":\"Factory which enables deploying a Vault for any ERC20 token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AIMVaultFactory.sol\":\"AIMVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d\",\"dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b\",\"dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434\",\"dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0xab8ca9afbb0f7412e1408d4f111b53cc00813bc752236638ad336050ea2188f8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cd892e4743a124063b7bc590c6f88f209a18a4831b18045afd843264fa75427f\",\"dweb:/ipfs/QmRunGD7E8enP5oZKiN8DxvAJew7J3jaz1iiHTFZj5Ghfc\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427\",\"dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/AIMVault.sol\":{\"keccak256\":\"0x0b13c2424319c308f9e60c84bdf15923f9ab8561bc680e866c11afb6883a0030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0b3c03d8cd1fe9bdf4e3bdbd402f6f8532b65a894e354273784b307f2540cc4\",\"dweb:/ipfs/QmXeeKsSTVHpYuPouMeWUmwM8zXLxa2EjRWXWeBfNiC752\"]},\"src/AIMVaultFactory.sol\":{\"keccak256\":\"0xa74744212490e6778085d208f25493981a450cc3429176c30e6f4f74cdb508bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9abaf554bd073a736c6f0166541016237673b88bbab83f0f71d098387065b79\",\"dweb:/ipfs/Qmaobc2kiGK4NiR2EKsvEzHbkgEpxvNLkiPks5aAuM8evX\"]},\"src/interface/CErcInterface.sol\":{\"keccak256\":\"0xc6443628fea031de116175a250d034e2db1fa0a331ae484e0bb253953eefc701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a32d99f21e779403f1e12b127b953167dab8704bbf440e39925ba238f192d033\",\"dweb:/ipfs/QmSHrKJDE4NTLRWVUe75esHnQmW7G9R1qDvP4njALVWqfY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AIMVault",
              "name": "vault",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "cToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VaultDeployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployVault",
          "outputs": [
            {
              "internalType": "contract AIMVault",
              "name": "vault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultFromUnderlying",
          "outputs": [
            {
              "internalType": "contract AIMVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract AIMVault",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultDeployed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vaults",
          "outputs": [
            {
              "internalType": "contract AIMVault",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_owner": "The owner of the factory."
            }
          },
          "deployVault(address,address,address)": {
            "details": "This will revert if a Vault that accepts the same underlying token has already been deployed.",
            "params": {
              "cToken": "The Compound cToken that the Vault should accept.",
              "underlying": "The ERC20 token that the Vault should accept."
            },
            "returns": {
              "vault": "The newly deployed Vault contract which accepts the provided underlying token."
            }
          },
          "getVaultFromUnderlying(address,address,address)": {
            "details": "The Vault returned may not be deployed yet. Use isVaultDeployed to check.",
            "params": {
              "cToken": "The Compound cToken that the Vault should accept.",
              "underlying": "The ERC20 token that the Vault should accept."
            },
            "returns": {
              "_0": "The address of a Vault which accepts the provided underlying token."
            }
          },
          "isVaultDeployed(address)": {
            "details": "This function is useful to check the return values of getVaultFromUnderlying, as it does not check that the Vault addresses it computes have been deployed yet.",
            "params": {
              "vault": "The address of a Vault which may not have been deployed yet."
            },
            "returns": {
              "_0": "A boolean indicating whether the Vault has been deployed already."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Creates a Vault factory."
          },
          "deployVault(address,address,address)": {
            "notice": "Deploys a new Vault which supports a specific underlying token."
          },
          "getVaultFromUnderlying(address,address,address)": {
            "notice": "Computes a Vault's address from its accepted underlying token."
          },
          "isVaultDeployed(address)": {
            "notice": "Returns if a Vault at an address has already been deployed."
          },
          "vaults(address)": {
            "notice": "Maps tokens to their vaults"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AIMVaultFactory.sol": "AIMVaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75",
        "urls": [
          "bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d",
          "dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x27255bf4fd142ba38ca6c9d5ef53ea50b8c91bf4fc51c4b14fe7b837d037619d",
        "urls": [
          "bzz-raw://0a96479450525a0ab28deedcf18afe6ab9579fe1a4059a6e3d5d1b859132f84b",
          "dweb:/ipfs/QmZdofDthhjzyT7sLy2epjBCeeDny1qaKJPQewdCPyrFVn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/Bytes32AddressLib.sol": {
        "keccak256": "0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6",
        "urls": [
          "bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434",
          "dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0xab8ca9afbb0f7412e1408d4f111b53cc00813bc752236638ad336050ea2188f8",
        "urls": [
          "bzz-raw://cd892e4743a124063b7bc590c6f88f209a18a4831b18045afd843264fa75427f",
          "dweb:/ipfs/QmRunGD7E8enP5oZKiN8DxvAJew7J3jaz1iiHTFZj5Ghfc"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab",
        "urls": [
          "bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427",
          "dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AIMVault.sol": {
        "keccak256": "0x0b13c2424319c308f9e60c84bdf15923f9ab8561bc680e866c11afb6883a0030",
        "urls": [
          "bzz-raw://f0b3c03d8cd1fe9bdf4e3bdbd402f6f8532b65a894e354273784b307f2540cc4",
          "dweb:/ipfs/QmXeeKsSTVHpYuPouMeWUmwM8zXLxa2EjRWXWeBfNiC752"
        ],
        "license": "MIT"
      },
      "src/AIMVaultFactory.sol": {
        "keccak256": "0xa74744212490e6778085d208f25493981a450cc3429176c30e6f4f74cdb508bf",
        "urls": [
          "bzz-raw://d9abaf554bd073a736c6f0166541016237673b88bbab83f0f71d098387065b79",
          "dweb:/ipfs/Qmaobc2kiGK4NiR2EKsvEzHbkgEpxvNLkiPks5aAuM8evX"
        ],
        "license": "MIT"
      },
      "src/interface/CErcInterface.sol": {
        "keccak256": "0xc6443628fea031de116175a250d034e2db1fa0a331ae484e0bb253953eefc701",
        "urls": [
          "bzz-raw://a32d99f21e779403f1e12b127b953167dab8704bbf440e39925ba238f192d033",
          "dweb:/ipfs/QmSHrKJDE4NTLRWVUe75esHnQmW7G9R1qDvP4njALVWqfY"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AIMVaultFactory.sol",
    "id": 25591,
    "exportedSymbols": {
      "AIMVault": [
        25415
      ],
      "AIMVaultFactory": [
        25590
      ],
      "Auth": [
        23398
      ],
      "Authority": [
        23411
      ],
      "Bytes32AddressLib": [
        24467
      ],
      "CErc20": [
        25675
      ],
      "ERC20": [
        24428
      ],
      "Owned": [
        23471
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4352:19",
    "nodes": [
      {
        "id": 25417,
        "nodeType": "PragmaDirective",
        "src": "32:23:19",
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 25419,
        "nodeType": "ImportDirective",
        "src": "57:48:19",
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 24429,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25418,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24428,
              "src": "65:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25422,
        "nodeType": "ImportDirective",
        "src": "106:55:19",
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "@solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 23412,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25420,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23398,
              "src": "114:4:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25421,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23411,
              "src": "120:9:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25424,
        "nodeType": "ImportDirective",
        "src": "162:46:19",
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "@solmate/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 23472,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25423,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23471,
              "src": "170:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25426,
        "nodeType": "ImportDirective",
        "src": "209:71:19",
        "absolutePath": "lib/solmate/src/utils/Bytes32AddressLib.sol",
        "file": "@solmate/utils/Bytes32AddressLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 24468,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25425,
              "name": "Bytes32AddressLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24467,
              "src": "217:17:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25428,
        "nodeType": "ImportDirective",
        "src": "282:40:19",
        "absolutePath": "src/AIMVault.sol",
        "file": "./AIMVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 25416,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25427,
              "name": "AIMVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25415,
              "src": "290:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25430,
        "nodeType": "ImportDirective",
        "src": "323:53:19",
        "absolutePath": "src/interface/CErcInterface.sol",
        "file": "./interface/CErcInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25591,
        "sourceUnit": 25676,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25429,
              "name": "CErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25675,
              "src": "331:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25590,
        "nodeType": "ContractDefinition",
        "src": "523:3860:19",
        "nodes": [
          {
            "id": 25436,
            "nodeType": "UsingForDirective",
            "src": "563:36:19",
            "global": false,
            "libraryName": {
              "id": 25434,
              "name": "Bytes32AddressLib",
              "nameLocations": [
                "569:17:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24467,
              "src": "569:17:19"
            },
            "typeName": {
              "id": 25435,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 25439,
            "nodeType": "UsingForDirective",
            "src": "604:36:19",
            "global": false,
            "libraryName": {
              "id": 25437,
              "name": "Bytes32AddressLib",
              "nameLocations": [
                "610:17:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24467,
              "src": "610:17:19"
            },
            "typeName": {
              "id": 25438,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "632:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 25446,
            "nodeType": "VariableDeclaration",
            "src": "690:40:19",
            "constant": false,
            "documentation": {
              "id": 25440,
              "nodeType": "StructuredDocumentation",
              "src": "646:39:19",
              "text": "@notice Maps tokens to their vaults"
            },
            "functionSelector": "a622ee7c",
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "724:6:19",
            "scope": 25590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24428_$_t_contract$_AIMVault_$25415_$",
              "typeString": "mapping(contract ERC20 => contract AIMVault)"
            },
            "typeName": {
              "id": 25445,
              "keyType": {
                "id": 25442,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25441,
                  "name": "ERC20",
                  "nameLocations": [
                    "698:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24428,
                  "src": "698:5:19"
                },
                "referencedDeclaration": 24428,
                "src": "698:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$24428",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "690:26:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24428_$_t_contract$_AIMVault_$25415_$",
                "typeString": "mapping(contract ERC20 => contract AIMVault)"
              },
              "valueType": {
                "id": 25444,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25443,
                  "name": "AIMVault",
                  "nameLocations": [
                    "707:8:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25415,
                  "src": "707:8:19"
                },
                "referencedDeclaration": 25415,
                "src": "707:8:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AIMVault_$25415",
                  "typeString": "contract AIMVault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25456,
            "nodeType": "FunctionDefinition",
            "src": "826:44:19",
            "body": {
              "id": 25455,
              "nodeType": "Block",
              "src": "868:2:19",
              "statements": []
            },
            "documentation": {
              "id": 25447,
              "nodeType": "StructuredDocumentation",
              "src": "737:84:19",
              "text": "@notice Creates a Vault factory.\n @param _owner The owner of the factory."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25452,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25449,
                    "src": "860:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25453,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 25451,
                  "name": "Owned",
                  "nameLocations": [
                    "854:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23471,
                  "src": "854:5:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "854:13:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25449,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "846:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25456,
                  "src": "838:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:16:19"
            },
            "returnParameters": {
              "id": 25454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:19"
            },
            "scope": 25590,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25467,
            "nodeType": "EventDefinition",
            "src": "1128:70:19",
            "anonymous": false,
            "documentation": {
              "id": 25457,
              "nodeType": "StructuredDocumentation",
              "src": "876:247:19",
              "text": "@notice Emitted when a new Vault is deployed.\n @param vault The newly deployed Vault contract.\n @param underlying The underlying token the new Vault accepts.\n @param cToken The Compound cToken that the Vault should accept."
            },
            "eventSelector": "26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b",
            "name": "VaultDeployed",
            "nameLocation": "1134:13:19",
            "parameters": {
              "id": 25466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25460,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1157:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25467,
                  "src": "1148:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25415",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25459,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25458,
                      "name": "AIMVault",
                      "nameLocations": [
                        "1148:8:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25415,
                      "src": "1148:8:19"
                    },
                    "referencedDeclaration": 25415,
                    "src": "1148:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25463,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1170:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25467,
                  "src": "1164:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24428",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25461,
                      "name": "ERC20",
                      "nameLocations": [
                        "1164:5:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24428,
                      "src": "1164:5:19"
                    },
                    "referencedDeclaration": 24428,
                    "src": "1164:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24428",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25465,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1190:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25467,
                  "src": "1182:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1147:50:19"
            }
          },
          {
            "id": 25513,
            "nodeType": "FunctionDefinition",
            "src": "1636:636:19",
            "body": {
              "id": 25512,
              "nodeType": "Block",
              "src": "1780:492:19",
              "statements": [
                {
                  "expression": {
                    "id": 25498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25483,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25481,
                      "src": "2034:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25415",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25494,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25471,
                          "src": "2113:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24428",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 25495,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25473,
                          "src": "2137:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 25496,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25475,
                          "src": "2157:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$24428",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24428",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2042:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24428_$_t_address_$_t_address_$returns$_t_contract$_AIMVault_$25415_$",
                            "typeString": "function (contract ERC20,address,address) returns (contract AIMVault)"
                          },
                          "typeName": {
                            "id": 25485,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 25484,
                              "name": "AIMVault",
                              "nameLocations": [
                                "2046:8:19"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 25415,
                              "src": "2046:8:19"
                            },
                            "referencedDeclaration": 25415,
                            "src": "2046:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AIMVault_$25415",
                              "typeString": "contract AIMVault"
                            }
                          }
                        },
                        "id": 25493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "salt"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 25489,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25471,
                                    "src": "2069:10:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$24428",
                                      "typeString": "contract ERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$24428",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "id": 25488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2061:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25487,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2061:7:19",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2061:19:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 25491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2081:15:19",
                              "memberName": "fillLast12Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24466,
                              "src": "2061:35:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 25492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2061:37:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "src": "2042:57:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24428_$_t_address_$_t_address_$returns$_t_contract$_AIMVault_$25415_$salt",
                          "typeString": "function (contract ERC20,address,address) returns (contract AIMVault)"
                        }
                      },
                      "id": 25497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:130:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25415",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2034:138:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25499,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:138:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25501,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25481,
                        "src": "2202:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AIMVault_$25415",
                          "typeString": "contract AIMVault"
                        }
                      },
                      {
                        "id": 25502,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25471,
                        "src": "2209:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24428",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 25503,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25473,
                        "src": "2221:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AIMVault_$25415",
                          "typeString": "contract AIMVault"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$24428",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25500,
                      "name": "VaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25467,
                      "src": "2188:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_AIMVault_$25415_$_t_contract$_ERC20_$24428_$_t_address_$returns$__$",
                        "typeString": "function (contract AIMVault,contract ERC20,address)"
                      }
                    },
                    "id": 25504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25505,
                  "nodeType": "EmitStatement",
                  "src": "2183:45:19"
                },
                {
                  "expression": {
                    "id": 25510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25506,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25446,
                        "src": "2239:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24428_$_t_contract$_AIMVault_$25415_$",
                          "typeString": "mapping(contract ERC20 => contract AIMVault)"
                        }
                      },
                      "id": 25508,
                      "indexExpression": {
                        "id": 25507,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25471,
                        "src": "2246:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24428",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2239:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25415",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25509,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25481,
                      "src": "2260:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25415",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2239:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25511,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:26:19"
                }
              ]
            },
            "documentation": {
              "id": 25468,
              "nodeType": "StructuredDocumentation",
              "src": "1204:427:19",
              "text": "@notice Deploys a new Vault which supports a specific underlying token.\n @dev This will revert if a Vault that accepts the same underlying token has already been deployed.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return vault The newly deployed Vault contract which accepts the provided underlying token."
            },
            "functionSelector": "3e63576b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25477,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1745:9:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23434,
                  "src": "1745:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1745:9:19"
              }
            ],
            "name": "deployVault",
            "nameLocation": "1645:11:19",
            "parameters": {
              "id": 25476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25471,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1672:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25513,
                  "src": "1666:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24428",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25470,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25469,
                      "name": "ERC20",
                      "nameLocations": [
                        "1666:5:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24428,
                      "src": "1666:5:19"
                    },
                    "referencedDeclaration": 24428,
                    "src": "1666:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24428",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25473,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1700:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25513,
                  "src": "1692:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25475,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1724:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25513,
                  "src": "1716:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:79:19"
            },
            "returnParameters": {
              "id": 25482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25481,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1773:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25513,
                  "src": "1764:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25415",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25479,
                      "name": "AIMVault",
                      "nameLocations": [
                        "1764:8:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25415,
                      "src": "1764:8:19"
                    },
                    "referencedDeclaration": 25415,
                    "src": "1764:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1763:16:19"
            },
            "scope": 25590,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25570,
            "nodeType": "FunctionDefinition",
            "src": "2672:1158:19",
            "body": {
              "id": 25569,
              "nodeType": "Block",
              "src": "2816:1014:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30784646",
                                            "id": 25535,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3027:4:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            },
                                            "value": "0xFF"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            }
                                          ],
                                          "id": 25534,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3020:6:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes1_$",
                                            "typeString": "type(bytes1)"
                                          },
                                          "typeName": {
                                            "id": 25533,
                                            "name": "bytes1",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3020:6:19",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25536,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3020:12:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 25539,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "3110:4:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AIMVaultFactory_$25590",
                                              "typeString": "contract AIMVaultFactory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_AIMVaultFactory_$25590",
                                              "typeString": "contract AIMVaultFactory"
                                            }
                                          ],
                                          "id": 25538,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3102:7:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 25537,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3102:7:19",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25540,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3102:13:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 25543,
                                                "name": "underlying",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25517,
                                                "src": "3190:10:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$24428",
                                                  "typeString": "contract ERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$24428",
                                                  "typeString": "contract ERC20"
                                                }
                                              ],
                                              "id": 25542,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3182:7:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 25541,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3182:7:19",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25544,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3182:19:19",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 25545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3202:15:19",
                                          "memberName": "fillLast12Bytes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 24466,
                                          "src": "3182:35:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                            "typeString": "function (address) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3182:37:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 25551,
                                                      "name": "AIMVault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25415,
                                                      "src": "3457:8:19",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25415_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25415_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    ],
                                                    "id": 25550,
                                                    "name": "type",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -27,
                                                    "src": "3452:4:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                      "typeString": "function () pure"
                                                    }
                                                  },
                                                  "id": 25552,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "3452:14:19",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_meta_type_t_contract$_AIMVault_$25415",
                                                    "typeString": "type(contract AIMVault)"
                                                  }
                                                },
                                                "id": 25553,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "3467:12:19",
                                                "memberName": "creationCode",
                                                "nodeType": "MemberAccess",
                                                "src": "3452:27:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 25556,
                                                    "name": "underlying",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25517,
                                                    "src": "3590:10:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ERC20_$24428",
                                                      "typeString": "contract ERC20"
                                                    }
                                                  },
                                                  {
                                                    "id": 25557,
                                                    "name": "cToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25519,
                                                    "src": "3602:6:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "id": 25558,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25521,
                                                    "src": "3610:5:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_ERC20_$24428",
                                                      "typeString": "contract ERC20"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 25554,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "3579:3:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 25555,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberLocation": "3583:6:19",
                                                  "memberName": "encode",
                                                  "nodeType": "MemberAccess",
                                                  "src": "3579:10:19",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 25559,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3579:37:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25548,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "3338:3:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 25549,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "3342:12:19",
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "3338:16:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 25560,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3338:312:19",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 25547,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "3295:9:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25561,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3295:385:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25531,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2935:3:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 25532,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2939:12:19",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2935:16:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 25562,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2935:771:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 25530,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2900:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 25563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2900:828:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3729:15:19",
                              "memberName": "fromLast20Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24450,
                              "src": "2900:844:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32) pure returns (address)"
                              }
                            },
                            "id": 25565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2900:846:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2871:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25528,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2871:8:19",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2871:938:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 25527,
                      "name": "AIMVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25415,
                      "src": "2845:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25415_$",
                        "typeString": "type(contract AIMVault)"
                      }
                    },
                    "id": 25567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:978:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "functionReturnParameters": 25526,
                  "id": 25568,
                  "nodeType": "Return",
                  "src": "2826:997:19"
                }
              ]
            },
            "documentation": {
              "id": 25514,
              "nodeType": "StructuredDocumentation",
              "src": "2278:389:19",
              "text": "@notice Computes a Vault's address from its accepted underlying token.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return The address of a Vault which accepts the provided underlying token.\n @dev The Vault returned may not be deployed yet. Use isVaultDeployed to check."
            },
            "functionSelector": "a6ca403a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultFromUnderlying",
            "nameLocation": "2681:22:19",
            "parameters": {
              "id": 25522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25517,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "2719:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25570,
                  "src": "2713:16:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24428",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25516,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25515,
                      "name": "ERC20",
                      "nameLocations": [
                        "2713:5:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24428,
                      "src": "2713:5:19"
                    },
                    "referencedDeclaration": 24428,
                    "src": "2713:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24428",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25519,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "2747:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25570,
                  "src": "2739:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25521,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2771:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25570,
                  "src": "2763:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2703:79:19"
            },
            "returnParameters": {
              "id": 25526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25570,
                  "src": "2806:8:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25415",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25523,
                      "name": "AIMVault",
                      "nameLocations": [
                        "2806:8:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25415,
                      "src": "2806:8:19"
                    },
                    "referencedDeclaration": 25415,
                    "src": "2806:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2805:10:19"
            },
            "scope": 25590,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25589,
            "nodeType": "FunctionDefinition",
            "src": "4257:124:19",
            "body": {
              "id": 25588,
              "nodeType": "Block",
              "src": "4327:54:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25581,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25574,
                              "src": "4352:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AIMVault_$25415",
                                "typeString": "contract AIMVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AIMVault_$25415",
                                "typeString": "contract AIMVault"
                              }
                            ],
                            "id": 25580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4344:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25579,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4344:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4344:14:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4359:4:19",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "4344:19:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 25584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4364:6:19",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4344:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 25585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4373:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4344:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25578,
                  "id": 25587,
                  "nodeType": "Return",
                  "src": "4337:37:19"
                }
              ]
            },
            "documentation": {
              "id": 25571,
              "nodeType": "StructuredDocumentation",
              "src": "3836:416:19",
              "text": "@notice Returns if a Vault at an address has already been deployed.\n @param vault The address of a Vault which may not have been deployed yet.\n @return A boolean indicating whether the Vault has been deployed already.\n @dev This function is useful to check the return values of getVaultFromUnderlying,\n as it does not check that the Vault addresses it computes have been deployed yet."
            },
            "functionSelector": "7d6020f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultDeployed",
            "nameLocation": "4266:15:19",
            "parameters": {
              "id": 25575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25574,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "4291:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25589,
                  "src": "4282:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25415",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25573,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25572,
                      "name": "AIMVault",
                      "nameLocations": [
                        "4282:8:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25415,
                      "src": "4282:8:19"
                    },
                    "referencedDeclaration": 25415,
                    "src": "4282:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25415",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4281:16:19"
            },
            "returnParameters": {
              "id": 25578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25589,
                  "src": "4321:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4321:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4320:6:19"
            },
            "scope": 25590,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25432,
              "name": "Owned",
              "nameLocations": [
                "551:5:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23471,
              "src": "551:5:19"
            },
            "id": 25433,
            "nodeType": "InheritanceSpecifier",
            "src": "551:5:19"
          }
        ],
        "canonicalName": "AIMVaultFactory",
        "contractDependencies": [
          25415
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 25431,
          "nodeType": "StructuredDocumentation",
          "src": "378:145:19",
          "text": "@title Rari Vault Factory\n @author Transmissions11 and JetJadeja\n @notice Factory which enables deploying a Vault for any ERC20 token."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25590,
          23471
        ],
        "name": "AIMVaultFactory",
        "nameLocation": "532:15:19",
        "scope": 25591,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}