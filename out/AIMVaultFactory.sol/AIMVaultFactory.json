{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "VaultDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "deployVault",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "getVaultFromUnderlying",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "isVaultDeployed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "523:3800:18:-:0;;;826:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:5:8;:14;;-1:-1:-1;;;;;;1037:14:8;-1:-1:-1;;;;;1037:14:8;;;;;;;1067:32;;1037:14;;:5;1067:32;;1037:5;;1067:32;999:107;826:44:18;523:3800;;14:290:22;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:22;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:22:o;:::-;523:3800:18;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "523:3800:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:144:8;;;;;;:::i;:::-;;:::i;:::-;;2636:1134:18;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;992:32:22;;;974:51;;962:2;947:18;2636:1134:18;;;;;;;;1636:600;;;;;;:::i;:::-;;:::i;4197:124::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4284:26:18;;:30;;;4197:124;;;;1471:14:22;;1464:22;1446:41;;1434:2;1419:18;4197:124:18;1306:187:22;682:20:8;;;;;-1:-1:-1;;;;;682:20:8;;;690:40:18;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;690:40:18;;;1296:144:8;770:5;;-1:-1:-1;;;;;770:5:8;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:8;;2175:2:22;748:44:8;;;2157:21:22;2214:2;2194:18;;;2187:30;-1:-1:-1;;;2233:18:22;;;2226:42;2285:18;;748:44:8;;;;;;;;;1367:5:::1;:16:::0;;-1:-1:-1;;;;;;1367:16:8::1;-1:-1:-1::0;;;;;1367:16:8;::::1;::::0;;::::1;::::0;;1399:34:::1;::::0;1367:16;;1412:10:::1;::::0;1399:34:::1;::::0;1367:5;1399:34:::1;1296:144:::0;:::o;2636:1134:18:-;2749:8;2847:839;-1:-1:-1;;;;;;3057:4:18;528:21:12;;;;-1:-1:-1;;;;;;528:21:12;3399:27:18;;;;;;;:::i;:::-;-1:-1:-1;;3399:27:18;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2559:15:22;;;3399:27:18;3526:30;;2541:34:22;2611:15;;2591:18;;;2584:43;2476:18;;3526:30:18;;;-1:-1:-1;;3526:30:18;;;;;;;;;;3285:305;;;3526:30;3285:305;;:::i;:::-;;;;;;;;;;;;;3242:378;;;;;;2882:764;;;;;;;;;;-1:-1:-1;;;;;;3468:26:22;;;;3456:39;;3532:2;3528:15;;;;-1:-1:-1;;;;;;3524:53:22;3520:1;3511:11;;3504:74;3603:2;3594:12;;3587:28;3640:2;3631:12;;3624:28;3677:2;3668:12;;3245:441;2882:764:18;;;;;;;;;;;;;2847:821;;;;;;398:10:12;280:138;2847:839:18;2773:990;2636:1134;-1:-1:-1;;;2636:1134:18:o;1636:600::-;1743:14;770:5:8;;-1:-1:-1;;;;;770:5:8;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:8;;2175:2:22;748:44:8;;;2157:21:22;2214:2;2194:18;;;2187:30;-1:-1:-1;;;2233:18:22;;;2226:42;2285:18;;748:44:8;1973:336:22;748:44:8;528:21:12;;;;-1:-1:-1;;;;;;528:21:12;2096:10:18::1;2120:6;2025:111;;;;;:::i;:::-;-1:-1:-1::0;;;;;2559:15:22;;;2541:34;;2611:15;;2606:2;2591:18;;2584:43;2491:2;2476:18;2025:111:18::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2152:40:18::1;::::0;;-1:-1:-1;;;;;3982:15:22;;;3964:34;;4034:15;;;4029:2;4014:18;;4007:43;4086:15;;4066:18;;;4059:43;2152:40:18;;3982:15:22;;-1:-1:-1;2152:40:18::1;::::0;;;;;3914:2:22;2152:40:18;;::::1;-1:-1:-1::0;;;;;2203:18:18;;::::1;;::::0;;;:6:::1;:18;::::0;;;;:26;;-1:-1:-1;;;;;;2203:26:18::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2203:26:18;1636:600::o;-1:-1:-1:-;;;;;;;;:::o;14:131:22:-;-1:-1:-1;;;;;89:31:22;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:403::-;485:6;493;546:2;534:9;525:7;521:23;517:32;514:52;;;562:1;559;552:12;514:52;601:9;588:23;620:31;645:5;620:31;:::i;:::-;670:5;-1:-1:-1;727:2:22;712:18;;699:32;740:33;699:32;740:33;:::i;:::-;792:7;782:17;;;402:403;;;;;:::o;2638:336::-;2679:3;2717:5;2711:12;2741:1;2751:128;2765:6;2762:1;2759:13;2751:128;;;2862:4;2847:13;;;2843:24;;2837:31;2824:11;;;2817:52;2780:12;2751:128;;;2897:6;2894:1;2891:13;2888:48;;;2932:1;2923:6;2918:3;2914:16;2907:27;2888:48;-1:-1:-1;2952:16:22;;;;;2638:336;-1:-1:-1;;2638:336:22:o;2979:261::-;3154:3;3179:55;3204:29;3229:3;3221:6;3204:29;:::i;:::-;3196:6;3179:55;:::i;:::-;3172:62;2979:261;-1:-1:-1;;;;2979:261:22:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deployVault(address,address)": "338919c8",
    "getVaultFromUnderlying(address,address)": "15006fac",
    "isVaultDeployed(address)": "7d6020f4",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "vaults(address)": "a622ee7c"
  },
  "ast": {
    "absolutePath": "src/AIMVaultFactory.sol",
    "id": 25480,
    "exportedSymbols": {
      "AIMVault": [
        25310
      ],
      "AIMVaultFactory": [
        25479
      ],
      "Auth": [
        23254
      ],
      "Authority": [
        23267
      ],
      "Bytes32AddressLib": [
        24323
      ],
      "CErc20": [
        25564
      ],
      "ERC20": [
        24284
      ],
      "Owned": [
        23327
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4292:18",
    "nodes": [
      {
        "id": 25312,
        "nodeType": "PragmaDirective",
        "src": "32:23:18",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 25314,
        "nodeType": "ImportDirective",
        "src": "57:48:18",
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 24285,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25313,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24284,
              "src": "65:5:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25317,
        "nodeType": "ImportDirective",
        "src": "106:55:18",
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "@solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 23268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25315,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23254,
              "src": "114:4:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25316,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23267,
              "src": "120:9:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25319,
        "nodeType": "ImportDirective",
        "src": "162:46:18",
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "@solmate/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 23328,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25318,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23327,
              "src": "170:5:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25321,
        "nodeType": "ImportDirective",
        "src": "209:71:18",
        "absolutePath": "lib/solmate/src/utils/Bytes32AddressLib.sol",
        "file": "@solmate/utils/Bytes32AddressLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 24324,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25320,
              "name": "Bytes32AddressLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24323,
              "src": "217:17:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25323,
        "nodeType": "ImportDirective",
        "src": "282:40:18",
        "absolutePath": "src/AIMVault.sol",
        "file": "./AIMVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 25311,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25322,
              "name": "AIMVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25310,
              "src": "290:8:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25325,
        "nodeType": "ImportDirective",
        "src": "323:53:18",
        "absolutePath": "src/interface/CErcInterface.sol",
        "file": "./interface/CErcInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25480,
        "sourceUnit": 25565,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25324,
              "name": "CErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25564,
              "src": "331:6:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25479,
        "nodeType": "ContractDefinition",
        "src": "523:3800:18",
        "nodes": [
          {
            "id": 25331,
            "nodeType": "UsingForDirective",
            "src": "563:36:18",
            "global": false,
            "libraryName": {
              "id": 25329,
              "name": "Bytes32AddressLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24323,
              "src": "569:17:18"
            },
            "typeName": {
              "id": 25330,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 25334,
            "nodeType": "UsingForDirective",
            "src": "604:36:18",
            "global": false,
            "libraryName": {
              "id": 25332,
              "name": "Bytes32AddressLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24323,
              "src": "610:17:18"
            },
            "typeName": {
              "id": 25333,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "632:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 25341,
            "nodeType": "VariableDeclaration",
            "src": "690:40:18",
            "constant": false,
            "documentation": {
              "id": 25335,
              "nodeType": "StructuredDocumentation",
              "src": "646:39:18",
              "text": "@notice Maps tokens to their vaults"
            },
            "functionSelector": "a622ee7c",
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "724:6:18",
            "scope": 25479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24284_$_t_contract$_AIMVault_$25310_$",
              "typeString": "mapping(contract ERC20 => contract AIMVault)"
            },
            "typeName": {
              "id": 25340,
              "keyType": {
                "id": 25337,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25336,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24284,
                  "src": "698:5:18"
                },
                "referencedDeclaration": 24284,
                "src": "698:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$24284",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "690:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24284_$_t_contract$_AIMVault_$25310_$",
                "typeString": "mapping(contract ERC20 => contract AIMVault)"
              },
              "valueType": {
                "id": 25339,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25338,
                  "name": "AIMVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25310,
                  "src": "707:8:18"
                },
                "referencedDeclaration": 25310,
                "src": "707:8:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AIMVault_$25310",
                  "typeString": "contract AIMVault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25351,
            "nodeType": "FunctionDefinition",
            "src": "826:44:18",
            "body": {
              "id": 25350,
              "nodeType": "Block",
              "src": "868:2:18",
              "statements": []
            },
            "documentation": {
              "id": 25342,
              "nodeType": "StructuredDocumentation",
              "src": "737:84:18",
              "text": "@notice Creates a Vault factory.\n @param _owner The owner of the factory."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25347,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25344,
                    "src": "860:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25348,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 25346,
                  "name": "Owned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23327,
                  "src": "854:5:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "854:13:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25344,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "846:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25351,
                  "src": "838:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:16:18"
            },
            "returnParameters": {
              "id": 25349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:18"
            },
            "scope": 25479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25362,
            "nodeType": "EventDefinition",
            "src": "1128:70:18",
            "anonymous": false,
            "documentation": {
              "id": 25352,
              "nodeType": "StructuredDocumentation",
              "src": "876:247:18",
              "text": "@notice Emitted when a new Vault is deployed.\n @param vault The newly deployed Vault contract.\n @param underlying The underlying token the new Vault accepts.\n @param cToken The Compound cToken that the Vault should accept."
            },
            "eventSelector": "26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b",
            "name": "VaultDeployed",
            "nameLocation": "1134:13:18",
            "parameters": {
              "id": 25361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25355,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1157:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25362,
                  "src": "1148:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25310",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25354,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25353,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25310,
                      "src": "1148:8:18"
                    },
                    "referencedDeclaration": 25310,
                    "src": "1148:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1170:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25362,
                  "src": "1164:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24284",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25357,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25356,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24284,
                      "src": "1164:5:18"
                    },
                    "referencedDeclaration": 24284,
                    "src": "1164:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24284",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1190:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25362,
                  "src": "1182:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1147:50:18"
            }
          },
          {
            "id": 25405,
            "nodeType": "FunctionDefinition",
            "src": "1636:600:18",
            "body": {
              "id": 25404,
              "nodeType": "Block",
              "src": "1763:473:18",
              "statements": [
                {
                  "expression": {
                    "id": 25390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25376,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25374,
                      "src": "2017:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25310",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25387,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25366,
                          "src": "2096:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24284",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 25388,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25368,
                          "src": "2120:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$24284",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24284",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2025:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24284_$_t_address_$returns$_t_contract$_AIMVault_$25310_$",
                            "typeString": "function (contract ERC20,address) returns (contract AIMVault)"
                          },
                          "typeName": {
                            "id": 25378,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 25377,
                              "name": "AIMVault",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 25310,
                              "src": "2029:8:18"
                            },
                            "referencedDeclaration": 25310,
                            "src": "2029:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AIMVault_$25310",
                              "typeString": "contract AIMVault"
                            }
                          }
                        },
                        "id": 25386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "salt"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 25382,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25366,
                                    "src": "2052:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$24284",
                                      "typeString": "contract ERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$24284",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "id": 25381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2044:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2044:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2044:19:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 25384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fillLast12Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24322,
                              "src": "2044:35:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 25385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2044:37:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "src": "2025:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24284_$_t_address_$returns$_t_contract$_AIMVault_$25310_$salt",
                          "typeString": "function (contract ERC20,address) returns (contract AIMVault)"
                        }
                      },
                      "id": 25389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2025:111:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25310",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2017:119:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25391,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:119:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25393,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25374,
                        "src": "2166:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AIMVault_$25310",
                          "typeString": "contract AIMVault"
                        }
                      },
                      {
                        "id": 25394,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25366,
                        "src": "2173:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24284",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 25395,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25368,
                        "src": "2185:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AIMVault_$25310",
                          "typeString": "contract AIMVault"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$24284",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25392,
                      "name": "VaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25362,
                      "src": "2152:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_AIMVault_$25310_$_t_contract$_ERC20_$24284_$_t_address_$returns$__$",
                        "typeString": "function (contract AIMVault,contract ERC20,address)"
                      }
                    },
                    "id": 25396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:40:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25397,
                  "nodeType": "EmitStatement",
                  "src": "2147:45:18"
                },
                {
                  "expression": {
                    "id": 25402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25398,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25341,
                        "src": "2203:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24284_$_t_contract$_AIMVault_$25310_$",
                          "typeString": "mapping(contract ERC20 => contract AIMVault)"
                        }
                      },
                      "id": 25400,
                      "indexExpression": {
                        "id": 25399,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25366,
                        "src": "2210:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24284",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2203:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25310",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25401,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25374,
                      "src": "2224:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25310",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2203:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25403,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:26:18"
                }
              ]
            },
            "documentation": {
              "id": 25363,
              "nodeType": "StructuredDocumentation",
              "src": "1204:427:18",
              "text": "@notice Deploys a new Vault which supports a specific underlying token.\n @dev This will revert if a Vault that accepts the same underlying token has already been deployed.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return vault The newly deployed Vault contract which accepts the provided underlying token."
            },
            "functionSelector": "338919c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25371,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25370,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23290,
                  "src": "1716:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1716:9:18"
              }
            ],
            "name": "deployVault",
            "nameLocation": "1645:11:18",
            "parameters": {
              "id": 25369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25366,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1663:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25405,
                  "src": "1657:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24284",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25365,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25364,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24284,
                      "src": "1657:5:18"
                    },
                    "referencedDeclaration": 24284,
                    "src": "1657:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24284",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25368,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1683:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25405,
                  "src": "1675:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:34:18"
            },
            "returnParameters": {
              "id": 25375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25374,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1752:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25405,
                  "src": "1743:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25310",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25373,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25372,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25310,
                      "src": "1743:8:18"
                    },
                    "referencedDeclaration": 25310,
                    "src": "1743:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:16:18"
            },
            "scope": 25479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25459,
            "nodeType": "FunctionDefinition",
            "src": "2636:1134:18",
            "body": {
              "id": 25458,
              "nodeType": "Block",
              "src": "2763:1007:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30784646",
                                            "id": 25425,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2974:4:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            },
                                            "value": "0xFF"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            }
                                          ],
                                          "id": 25424,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2967:6:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes1_$",
                                            "typeString": "type(bytes1)"
                                          },
                                          "typeName": {
                                            "id": 25423,
                                            "name": "bytes1",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2967:6:18",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2967:12:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 25429,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "3057:4:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AIMVaultFactory_$25479",
                                              "typeString": "contract AIMVaultFactory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_AIMVaultFactory_$25479",
                                              "typeString": "contract AIMVaultFactory"
                                            }
                                          ],
                                          "id": 25428,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3049:7:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 25427,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3049:7:18",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25430,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3049:13:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 25433,
                                                "name": "underlying",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25409,
                                                "src": "3137:10:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$24284",
                                                  "typeString": "contract ERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$24284",
                                                  "typeString": "contract ERC20"
                                                }
                                              ],
                                              "id": 25432,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3129:7:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 25431,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3129:7:18",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25434,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3129:19:18",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 25435,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "fillLast12Bytes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 24322,
                                          "src": "3129:35:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                            "typeString": "function (address) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25436,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3129:37:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 25441,
                                                      "name": "AIMVault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25310,
                                                      "src": "3404:8:18",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25310_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25310_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    ],
                                                    "id": 25440,
                                                    "name": "type",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -27,
                                                    "src": "3399:4:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                      "typeString": "function () pure"
                                                    }
                                                  },
                                                  "id": 25442,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "3399:14:18",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_meta_type_t_contract$_AIMVault_$25310",
                                                    "typeString": "type(contract AIMVault)"
                                                  }
                                                },
                                                "id": 25443,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "creationCode",
                                                "nodeType": "MemberAccess",
                                                "src": "3399:27:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 25446,
                                                    "name": "underlying",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25409,
                                                    "src": "3537:10:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ERC20_$24284",
                                                      "typeString": "contract ERC20"
                                                    }
                                                  },
                                                  {
                                                    "id": 25447,
                                                    "name": "cToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25411,
                                                    "src": "3549:6:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_ERC20_$24284",
                                                      "typeString": "contract ERC20"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 25444,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "3526:3:18",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 25445,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "encode",
                                                  "nodeType": "MemberAccess",
                                                  "src": "3526:10:18",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 25448,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3526:30:18",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25438,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "3285:3:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 25439,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "3285:16:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 25449,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3285:305:18",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 25437,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "3242:9:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25450,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3242:378:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25421,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2882:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 25422,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2882:16:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 25451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2882:764:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 25420,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2847:9:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 25452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2847:821:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromLast20Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24306,
                              "src": "2847:837:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32) pure returns (address)"
                              }
                            },
                            "id": 25454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2847:839:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2818:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25418,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2818:8:18",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2818:931:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 25417,
                      "name": "AIMVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25310,
                      "src": "2792:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25310_$",
                        "typeString": "type(contract AIMVault)"
                      }
                    },
                    "id": 25456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2792:971:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "functionReturnParameters": 25416,
                  "id": 25457,
                  "nodeType": "Return",
                  "src": "2773:990:18"
                }
              ]
            },
            "documentation": {
              "id": 25406,
              "nodeType": "StructuredDocumentation",
              "src": "2242:389:18",
              "text": "@notice Computes a Vault's address from its accepted underlying token.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return The address of a Vault which accepts the provided underlying token.\n @dev The Vault returned may not be deployed yet. Use isVaultDeployed to check."
            },
            "functionSelector": "15006fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultFromUnderlying",
            "nameLocation": "2645:22:18",
            "parameters": {
              "id": 25412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25409,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "2674:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25459,
                  "src": "2668:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24284",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25407,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24284,
                      "src": "2668:5:18"
                    },
                    "referencedDeclaration": 24284,
                    "src": "2668:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24284",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25411,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "2694:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25459,
                  "src": "2686:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2686:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2667:34:18"
            },
            "returnParameters": {
              "id": 25416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25459,
                  "src": "2749:8:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25310",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25413,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25310,
                      "src": "2749:8:18"
                    },
                    "referencedDeclaration": 25310,
                    "src": "2749:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:10:18"
            },
            "scope": 25479,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25478,
            "nodeType": "FunctionDefinition",
            "src": "4197:124:18",
            "body": {
              "id": 25477,
              "nodeType": "Block",
              "src": "4267:54:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25470,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25463,
                              "src": "4292:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AIMVault_$25310",
                                "typeString": "contract AIMVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AIMVault_$25310",
                                "typeString": "contract AIMVault"
                              }
                            ],
                            "id": 25469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4284:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25468,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4284:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4284:14:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "4284:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 25473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4284:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 25474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4313:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4284:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25467,
                  "id": 25476,
                  "nodeType": "Return",
                  "src": "4277:37:18"
                }
              ]
            },
            "documentation": {
              "id": 25460,
              "nodeType": "StructuredDocumentation",
              "src": "3776:416:18",
              "text": "@notice Returns if a Vault at an address has already been deployed.\n @param vault The address of a Vault which may not have been deployed yet.\n @return A boolean indicating whether the Vault has been deployed already.\n @dev This function is useful to check the return values of getVaultFromUnderlying,\n as it does not check that the Vault addresses it computes have been deployed yet."
            },
            "functionSelector": "7d6020f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultDeployed",
            "nameLocation": "4206:15:18",
            "parameters": {
              "id": 25464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25463,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "4231:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 25478,
                  "src": "4222:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25310",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25461,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25310,
                      "src": "4222:8:18"
                    },
                    "referencedDeclaration": 25310,
                    "src": "4222:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25310",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4221:16:18"
            },
            "returnParameters": {
              "id": 25467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25478,
                  "src": "4261:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25465,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4260:6:18"
            },
            "scope": 25479,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25327,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23327,
              "src": "551:5:18"
            },
            "id": 25328,
            "nodeType": "InheritanceSpecifier",
            "src": "551:5:18"
          }
        ],
        "canonicalName": "AIMVaultFactory",
        "contractDependencies": [
          25310
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 25326,
          "nodeType": "StructuredDocumentation",
          "src": "378:145:18",
          "text": "@title Rari Vault Factory\n @author Transmissions11 and JetJadeja\n @notice Factory which enables deploying a Vault for any ERC20 token."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25479,
          23327
        ],
        "name": "AIMVaultFactory",
        "nameLocation": "532:15:18",
        "scope": 25480,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 18
}