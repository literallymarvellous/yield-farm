{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "VaultDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deployVault",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlying",
          "type": "address"
        },
        {
          "internalType": "contract CErc20",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "getVaultFromUnderlying",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AIMVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "isVaultDeployed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "contract AIMVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161276938038061276983398101604081905261002f9161007e565b600080546001600160a01b0319166001600160a01b03831690811782556040518392907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350506100ae565b60006020828403121561009057600080fd5b81516001600160a01b03811681146100a757600080fd5b9392505050565b6126ac806100bd6000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806313af4035146200006f57806315006fac14620000885780633e63576b14620000bc5780637d6020f414620000d35780638da5cb5b1462000104578063a622ee7c1462000118575b600080fd5b620000866200008036600462000425565b62000144565b005b6200009f6200009936600462000445565b620001de565b6040516001600160a01b0390911681526020015b60405180910390f35b6200009f620000cd36600462000483565b620002d5565b620000f3620000e436600462000425565b6001600160a01b03163b151590565b6040519015158152602001620000b3565b6000546200009f906001600160a01b031681565b6200009f6200012936600462000425565b6001602052600090815260409020546001600160a01b031681565b6000546001600160a01b03163314620001935760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6000620002ce6001600160f81b031930606086901b6001600160601b0319166040516200020e60208201620003fe565b601f1982820381018352601f9091011660408181526001600160a01b038a8116602084015289169082015260600160408051601f19818403018152908290526200025c929160200162000513565b60405160208183030381529060405280519060200120604051602001620002b594939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012090565b9392505050565b600080546001600160a01b03163314620003215760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016200018a565b606084901b6001600160601b03191684846040516200034090620003fe565b6001600160a01b039283168152911660208201526040018190604051809103906000f590508015801562000378573d6000803e3d6000fd5b50604080516001600160a01b038381168252878116602083015286168183015290519192507f26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b919081900360600190a16001600160a01b03938416600090815260016020526040902080546001600160a01b031916948216949094179093555090919050565b612142806200053583390190565b6001600160a01b03811681146200042257600080fd5b50565b6000602082840312156200043857600080fd5b8135620002ce816200040c565b600080604083850312156200045957600080fd5b823562000466816200040c565b9150602083013562000478816200040c565b809150509250929050565b6000806000606084860312156200049957600080fd5b8335620004a6816200040c565b92506020840135620004b8816200040c565b91506040840135620004ca816200040c565b809150509250925092565b6000815160005b81811015620004f85760208185018101518683015201620004dc565b8181111562000508576000828601525b509290920192915050565b60006200052c620005258386620004d5565b84620004d5565b94935050505056fe6101406040523480156200001257600080fd5b5060405162002142380380620021428339810160408190526200003591620002c1565b81826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f919081019062000349565b604051602001620000b1919062000401565b604051602081830303815290604052836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000129919081019062000349565b6040516020016200013b91906200043f565b6040516020818303038152906040528181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b191906200046b565b6000620001bf848262000526565b506001620001ce838262000526565b5060ff81166080524660a052620001e46200020c565b60c0525050506001600160a01b0392831660e052505091821661010052166101205262000670565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620002409190620005f2565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b0381168114620002be57600080fd5b50565b60008060408385031215620002d557600080fd5b8251620002e281620002a8565b6020840151909250620002f581620002a8565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200033357818101518382015260200162000319565b8381111562000343576000848401525b50505050565b6000602082840312156200035c57600080fd5b81516001600160401b03808211156200037457600080fd5b818401915084601f8301126200038957600080fd5b8151818111156200039e576200039e62000300565b604051601f8201601f19908116603f01168101908382118183101715620003c957620003c962000300565b81604052828152876020848701011115620003e357600080fd5b620003f683602083016020880162000316565b979650505050505050565b63020b4b6960e51b8152600082516200042281600485016020870162000316565b650815985d5b1d60d21b6004939091019283015250600a01919050565b6130bb60f11b8152600082516200045e81600285016020870162000316565b9190910160020192915050565b6000602082840312156200047e57600080fd5b815160ff811681146200049057600080fd5b9392505050565b600181811c90821680620004ac57607f821691505b602082108103620004cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200052157600081815260208120601f850160051c81016020861015620004fc5750805b601f850160051c820191505b818110156200051d5782815560010162000508565b5050505b505050565b81516001600160401b0381111562000542576200054262000300565b6200055a8162000553845462000497565b84620004d3565b602080601f831160018114620005925760008415620005795750858301515b600019600386901b1c1916600185901b1785556200051d565b600085815260208120601f198616915b82811015620005c357888601518255948401946001909101908401620005a2565b5085821015620005e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620006028162000497565b600182811680156200061d5760018114620006335762000664565b60ff198416875282151583028701945062000664565b8760005260208060002060005b858110156200065b5781548a82015290840190820162000640565b50505082870194505b50929695505050505050565b60805160a05160c05160e0516101005161012051611a2e62000714600039600081816103750152818161061a015281816106a0015281816110a001528181611304015281816113b701526114b1015260008181610467015281816109f1015261133301526000818161030e0152818161095701528181610a7e01528181610c840152610ddb015260006108cd01526000610898015260006102cd0152611a2e6000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063841219e511610125578063c63d75b6116100ad578063d905777e1161007c578063d905777e146104c4578063da55602b146104ed578063dd62ed3e146104f5578063ecad956514610520578063ef8b30f71461052957600080fd5b8063c63d75b614610348578063c6e6f59214610489578063ce96cb771461049c578063d505accf146104af57600080fd5b8063b3d7f6b9116100f4578063b3d7f6b914610420578063b460af9414610433578063ba08765214610446578063c55c313c14610459578063c5d664c61461046257600080fd5b8063841219e5146103ea57806394bf804d146103f257806395d89b4114610405578063a9059cbb1461040d57600080fd5b8063313ce567116101a85780634cdad506116101775780634cdad5061461035d57806369e527da146103705780636e553f651461039757806370a08231146103aa5780637ecebe00146103ca57600080fd5b8063313ce567146102c85780633644e5151461030157806338d52e0f14610309578063402d267d1461034857600080fd5b8063095ea7b3116101e4578063095ea7b3146102765780630a28a4771461029957806318160ddd146102ac57806323b872dd146102b557600080fd5b806301e1d1141461021657806306fdde031461023157806307a2d13a1461024657806308bf795214610259575b600080fd5b61021e61053c565b6040519081526020015b60405180910390f35b61023961055a565b604051610228919061164d565b61021e6102543660046116a2565b6105e8565b610261610615565b60408051928352602083019190915201610228565b6102896102843660046116d7565b610728565b6040519015158152602001610228565b61021e6102a73660046116a2565b610794565b61021e60025481565b6102896102c3366004611701565b6107b4565b6102ef7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610228565b61021e610894565b6103307f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610228565b61021e61035636600461173d565b5060001990565b61021e61036b3660046116a2565b6108ef565b6103307f000000000000000000000000000000000000000000000000000000000000000081565b61021e6103a5366004611758565b6108fa565b61021e6103b836600461173d565b60036020526000908152604090205481565b61021e6103d836600461173d565b60056020526000908152604090205481565b61021e6109d9565b61021e610400366004611758565b610a64565b610239610b00565b61028961041b3660046116d7565b610b0d565b61021e61042e3660046116a2565b610b73565b61021e610441366004611784565b610b92565b61021e610454366004611784565b610cab565b61021e60065481565b6103307f000000000000000000000000000000000000000000000000000000000000000081565b61021e6104973660046116a2565b610e02565b61021e6104aa36600461173d565b610e22565b6104c26104bd3660046117c0565b610e44565b005b61021e6104d236600461173d565b6001600160a01b031660009081526003602052604090205490565b61021e611088565b61021e610503366004611833565b600460209081526000928352604080842090915290825290205481565b61021e60075481565b61021e6105373660046116a2565b6110f1565b6000806105476109d9565b6007546105549190611873565b92915050565b600080546105679061188b565b80601f01602080910402602001604051908101604052809291908181526020018280546105939061188b565b80156105e05780601f106105b5576101008083540402835291602001916105e0565b820191906000526020600020905b8154815290600101906020018083116105c357829003601f168201915b505050505081565b600254600090801561060c576106076105ff61053c565b8490836110fc565b61060e565b825b9392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c91906118c5565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ae9d70b06040518163ffffffff1660e01b81526004016020604051808303816000875af11580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072291906118c5565b90509091565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107839086815260200190565b60405180910390a350600192915050565b600254600090801561060c57610607816107ac61053c565b85919061111b565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610810576107eb83826118de565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906108389084906118de565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206119d9833981519152906108819087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146108ca576108c5611149565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6000610554826105e8565b6000610905836110f1565b90508060000361094a5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064015b60405180910390fd5b61097f6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330866111e3565b610989828261126d565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a361055483826112c7565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c591906118c5565b6000610a6f83610b73565b9050610aa66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846111e3565b610ab0828461126d565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a361055481846112c7565b600180546105679061188b565b33600090815260036020526040812080548391908390610b2e9084906118de565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206119d9833981519152906107839086815260200190565b600254600090801561060c57610607610b8a61053c565b84908361111b565b6000610b9c611088565b600755610ba884610794565b9050336001600160a01b03831614610c18576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610c1657610bf182826118de565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610c228482611475565b610c2c828261156d565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461060e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684866115cf565b6000336001600160a01b03831614610d1b576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610d1957610cf485826118de565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610d23611088565b600755610d2f846108ef565b905080600003610d6f5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610941565b610d798185611475565b610d83828561156d565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a461060e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836115cf565b600254600090801561060c5761060781610e1a61053c565b8591906110fc565b6001600160a01b038116600090815260036020526040812054610554906105e8565b42841015610e945760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610941565b60006001610ea0610894565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610fac573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610fe25750876001600160a01b0316816001600160a01b0316145b61101f5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610941565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b604051633af9e66960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633af9e669906024016020604051808303816000875af1158015610a40573d6000803e3d6000fd5b600061055482610e02565b82820281151584158583048514171661111457600080fd5b0492915050565b82820281151584158583048514171661113357600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161117b91906118f5565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806112665760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610941565b5050505050565b806002600082825461127f9190611873565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206119d983398151915291015b60405180910390a35050565b60006112d4600284611994565b905080600760008282546112e89190611873565b909155505060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af115801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a091906119b6565b5060405163140e25ad60e31b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a0712d68906024016020604051808303816000875af1158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c91906118c5565b156114705760405162461bcd60e51b815260206004820152601460248201527310d3d3540e8811195c1bdcda5d0811985a5b195960621b6044820152606401610941565b505050565b8161147e6109d9565b101561156957600061148e6109d9565b61149890846118de565b60405163db006a7560e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af1158015611502573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152691906118c5565b156114705760405162461bcd60e51b815260206004820152601360248201527210d3d3540e8814995919595b4819985a5b1959606a1b6044820152606401610941565b5050565b6001600160a01b038216600090815260036020526040812080548392906115959084906118de565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206119d9833981519152906020016112bb565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806116475760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610941565b50505050565b600060208083528351808285015260005b8181101561167a5785810183015185820160400152820161165e565b8181111561168c576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156116b457600080fd5b5035919050565b80356001600160a01b03811681146116d257600080fd5b919050565b600080604083850312156116ea57600080fd5b6116f3836116bb565b946020939093013593505050565b60008060006060848603121561171657600080fd5b61171f846116bb565b925061172d602085016116bb565b9150604084013590509250925092565b60006020828403121561174f57600080fd5b61060e826116bb565b6000806040838503121561176b57600080fd5b8235915061177b602084016116bb565b90509250929050565b60008060006060848603121561179957600080fd5b833592506117a9602085016116bb565b91506117b7604085016116bb565b90509250925092565b600080600080600080600060e0888a0312156117db57600080fd5b6117e4886116bb565b96506117f2602089016116bb565b95506040880135945060608801359350608088013560ff8116811461181657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561184657600080fd5b61184f836116bb565b915061177b602084016116bb565b634e487b7160e01b600052601160045260246000fd5b600082198211156118865761188661185d565b500190565b600181811c9082168061189f57607f821691505b6020821081036118bf57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156118d757600080fd5b5051919050565b6000828210156118f0576118f061185d565b500390565b600080835481600182811c91508083168061191157607f831692505b6020808410820361193057634e487b7160e01b86526022600452602486fd5b818015611944576001811461195957611986565b60ff1986168952841515850289019650611986565b60008a81526020902060005b8681101561197e5781548b820152908501908301611965565b505084890196505b509498975050505050505050565b6000826119b157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156119c857600080fd5b8151801515811461060e57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122049a21fbadd29793ef2715b0844a1a1431d241c7a01e05f639025fb22c2d8632c64736f6c634300080f0033a2646970667358221220c7bf263713679331eb1fddc0835ad38eb17e96c4ce5be64237fe67b431d6071f64736f6c634300080f0033",
    "sourceMap": "523:3807:16:-:0;;;823:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:5:8;:14;;-1:-1:-1;;;;;;1037:14:8;-1:-1:-1;;;;;1037:14:8;;;;;;;1067:32;;1037:14;;:5;1067:32;;1037:5;;1067:32;999:107;823:44:16;523:3807;;14:290:20;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:20;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:20:o;:::-;523:3807:16;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "523:3807:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:144:8;;;;;;:::i;:::-;;:::i;:::-;;2644:1133:16;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1008:32:20;;;990:51;;978:2;963:18;2644:1133:16;;;;;;;;1633:611;;;;;;:::i;:::-;;:::i;4204:124::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4291:26:16;;:30;;;4204:124;;;;2036:14:20;;2029:22;2011:41;;1999:2;1984:18;4204:124:16;1871:187:20;682:20:8;;;;;-1:-1:-1;;;;;682:20:8;;;687:40:16;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;687:40:16;;;1296:144:8;770:5;;-1:-1:-1;;;;;770:5:8;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:8;;2740:2:20;748:44:8;;;2722:21:20;2779:2;2759:18;;;2752:30;-1:-1:-1;;;2798:18:20;;;2791:42;2850:18;;748:44:8;;;;;;;;;1367:5:::1;:16:::0;;-1:-1:-1;;;;;;1367:16:8::1;-1:-1:-1::0;;;;;1367:16:8;::::1;::::0;;::::1;::::0;;1399:34:::1;::::0;1367:16;;1412:10:::1;::::0;1399:34:::1;::::0;1367:5;1399:34:::1;1296:144:::0;:::o;2644:1133:16:-;2756:8;2854:839;-1:-1:-1;;;;;;3064:4:16;528:21:11;;;;-1:-1:-1;;;;;;528:21:11;3406:27:16;;;;;;;:::i;:::-;-1:-1:-1;;3406:27:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3140:15:20;;;3406:27:16;3533:30;;3122:34:20;3192:15;;3172:18;;;3165:43;3057:18;;3533:30:16;;;-1:-1:-1;;3533:30:16;;;;;;;;;;3292:305;;;3533:30;3292:305;;:::i;:::-;;;;;;;;;;;;;3249:378;;;;;;2889:764;;;;;;;;;;-1:-1:-1;;;;;;4049:26:20;;;;4037:39;;4113:2;4109:15;;;;-1:-1:-1;;;;;;4105:53:20;4101:1;4092:11;;4085:74;4184:2;4175:12;;4168:28;4221:2;4212:12;;4205:28;4258:2;4249:12;;3826:441;2889:764:16;;;;;;;;;;;;;2854:821;;;;;;398:10:11;280:138;2854:839:16;2780:990;2644:1133;-1:-1:-1;;;2644:1133:16:o;1633:611::-;1755:14;770:5:8;;-1:-1:-1;;;;;770:5:8;756:10;:19;748:44;;;;-1:-1:-1;;;748:44:8;;2740:2:20;748:44:8;;;2722:21:20;2779:2;2759:18;;;2752:30;-1:-1:-1;;;2798:18:20;;;2791:42;2850:18;;748:44:8;2538:336:20;748:44:8;528:21:11;;;;-1:-1:-1;;;;;;528:21:11;2104:10:16::1;2128:6;2033:111;;;;;:::i;:::-;-1:-1:-1::0;;;;;3140:15:20;;;3122:34;;3192:15;;3187:2;3172:18;;3165:43;3072:2;3057:18;2033:111:16::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2160:40:16::1;::::0;;-1:-1:-1;;;;;4887:15:20;;;4869:34;;4939:15;;;4934:2;4919:18;;4912:43;4991:15;;4971:18;;;4964:43;2160:40:16;;4887:15:20;;-1:-1:-1;2160:40:16::1;::::0;;;;;4819:2:20;2160:40:16;;::::1;-1:-1:-1::0;;;;;2211:18:16;;::::1;;::::0;;;:6:::1;:18;::::0;;;;:26;;-1:-1:-1;;;;;;2211:26:16::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2211:26:16;;2232:5;-1:-1:-1;1633:611:16:o;-1:-1:-1:-;;;;;;;;:::o;14:131:20:-;-1:-1:-1;;;;;89:31:20;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:419::-;501:6;509;562:2;550:9;541:7;537:23;533:32;530:52;;;578:1;575;568:12;530:52;617:9;604:23;636:31;661:5;636:31;:::i;:::-;686:5;-1:-1:-1;743:2:20;728:18;;715:32;756:33;715:32;756:33;:::i;:::-;808:7;798:17;;;402:419;;;;;:::o;1052:544::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1268:9;1255:23;1287:31;1312:5;1287:31;:::i;:::-;1337:5;-1:-1:-1;1394:2:20;1379:18;;1366:32;1407:33;1366:32;1407:33;:::i;:::-;1459:7;-1:-1:-1;1518:2:20;1503:18;;1490:32;1531:33;1490:32;1531:33;:::i;:::-;1583:7;1573:17;;;1052:544;;;;;:::o;3219:336::-;3260:3;3298:5;3292:12;3322:1;3332:128;3346:6;3343:1;3340:13;3332:128;;;3443:4;3428:13;;;3424:24;;3418:31;3405:11;;;3398:52;3361:12;3332:128;;;3478:6;3475:1;3472:13;3469:48;;;3513:1;3504:6;3499:3;3495:16;3488:27;3469:48;-1:-1:-1;3533:16:20;;;;;3219:336;-1:-1:-1;;3219:336:20:o;3560:261::-;3735:3;3760:55;3785:29;3810:3;3802:6;3785:29;:::i;:::-;3777:6;3760:55;:::i;:::-;3753:62;3560:261;-1:-1:-1;;;;3560:261:20:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deployVault(address,address,address)": "3e63576b",
    "getVaultFromUnderlying(address,address)": "15006fac",
    "isVaultDeployed(address)": "7d6020f4",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "vaults(address)": "a622ee7c"
  },
  "ast": {
    "absolutePath": "src/AIMVaultFactory.sol",
    "id": 25306,
    "exportedSymbols": {
      "AIMVault": [
        25133
      ],
      "Auth": [
        23254
      ],
      "Authority": [
        23267
      ],
      "Bytes32AddressLib": [
        24275
      ],
      "CErc20": [
        25390
      ],
      "ERC20": [
        24236
      ],
      "Owned": [
        23327
      ],
      "VaultFactory": [
        25305
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4299:16",
    "nodes": [
      {
        "id": 25135,
        "nodeType": "PragmaDirective",
        "src": "32:23:16",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 25137,
        "nodeType": "ImportDirective",
        "src": "57:48:16",
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 24237,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25136,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24236,
              "src": "65:5:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25140,
        "nodeType": "ImportDirective",
        "src": "106:55:16",
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "@solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 23268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25138,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23254,
              "src": "114:4:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25139,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23267,
              "src": "120:9:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25142,
        "nodeType": "ImportDirective",
        "src": "162:46:16",
        "absolutePath": "lib/solmate/src/auth/Owned.sol",
        "file": "@solmate/auth/Owned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 23328,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25141,
              "name": "Owned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23327,
              "src": "170:5:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25144,
        "nodeType": "ImportDirective",
        "src": "209:71:16",
        "absolutePath": "lib/solmate/src/utils/Bytes32AddressLib.sol",
        "file": "@solmate/utils/Bytes32AddressLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 24276,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25143,
              "name": "Bytes32AddressLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24275,
              "src": "217:17:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25146,
        "nodeType": "ImportDirective",
        "src": "282:40:16",
        "absolutePath": "src/AIMVault.sol",
        "file": "./AIMVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 25134,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25145,
              "name": "AIMVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25133,
              "src": "290:8:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25148,
        "nodeType": "ImportDirective",
        "src": "323:53:16",
        "absolutePath": "src/interface/CErcInterface.sol",
        "file": "./interface/CErcInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25306,
        "sourceUnit": 25391,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25147,
              "name": "CErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25390,
              "src": "331:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25305,
        "nodeType": "ContractDefinition",
        "src": "523:3807:16",
        "nodes": [
          {
            "id": 25154,
            "nodeType": "UsingForDirective",
            "src": "560:36:16",
            "global": false,
            "libraryName": {
              "id": 25152,
              "name": "Bytes32AddressLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24275,
              "src": "566:17:16"
            },
            "typeName": {
              "id": 25153,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 25157,
            "nodeType": "UsingForDirective",
            "src": "601:36:16",
            "global": false,
            "libraryName": {
              "id": 25155,
              "name": "Bytes32AddressLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24275,
              "src": "607:17:16"
            },
            "typeName": {
              "id": 25156,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "629:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 25164,
            "nodeType": "VariableDeclaration",
            "src": "687:40:16",
            "constant": false,
            "documentation": {
              "id": 25158,
              "nodeType": "StructuredDocumentation",
              "src": "643:39:16",
              "text": "@notice Maps tokens to their vaults"
            },
            "functionSelector": "a622ee7c",
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "721:6:16",
            "scope": 25305,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24236_$_t_contract$_AIMVault_$25133_$",
              "typeString": "mapping(contract ERC20 => contract AIMVault)"
            },
            "typeName": {
              "id": 25163,
              "keyType": {
                "id": 25160,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25159,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24236,
                  "src": "695:5:16"
                },
                "referencedDeclaration": 24236,
                "src": "695:5:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$24236",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "687:26:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24236_$_t_contract$_AIMVault_$25133_$",
                "typeString": "mapping(contract ERC20 => contract AIMVault)"
              },
              "valueType": {
                "id": 25162,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25161,
                  "name": "AIMVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25133,
                  "src": "704:8:16"
                },
                "referencedDeclaration": 25133,
                "src": "704:8:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AIMVault_$25133",
                  "typeString": "contract AIMVault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25174,
            "nodeType": "FunctionDefinition",
            "src": "823:44:16",
            "body": {
              "id": 25173,
              "nodeType": "Block",
              "src": "865:2:16",
              "statements": []
            },
            "documentation": {
              "id": 25165,
              "nodeType": "StructuredDocumentation",
              "src": "734:84:16",
              "text": "@notice Creates a Vault factory.\n @param _owner The owner of the factory."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25170,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25167,
                    "src": "857:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25171,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 25169,
                  "name": "Owned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23327,
                  "src": "851:5:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "851:13:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25167,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "843:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25174,
                  "src": "835:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:16:16"
            },
            "returnParameters": {
              "id": 25172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:0:16"
            },
            "scope": 25305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25185,
            "nodeType": "EventDefinition",
            "src": "1125:70:16",
            "anonymous": false,
            "documentation": {
              "id": 25175,
              "nodeType": "StructuredDocumentation",
              "src": "873:247:16",
              "text": "@notice Emitted when a new Vault is deployed.\n @param vault The newly deployed Vault contract.\n @param underlying The underlying token the new Vault accepts.\n @param cToken The Compound cToken that the Vault should accept."
            },
            "eventSelector": "26ad9f07a47e389150a15677a365d64f42af0000b792c182ada6a3b5ab193a0b",
            "name": "VaultDeployed",
            "nameLocation": "1131:13:16",
            "parameters": {
              "id": 25184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25178,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1154:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25185,
                  "src": "1145:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25133",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25177,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25176,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25133,
                      "src": "1145:8:16"
                    },
                    "referencedDeclaration": 25133,
                    "src": "1145:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25181,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1167:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25185,
                  "src": "1161:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24236",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25180,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25179,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24236,
                      "src": "1161:5:16"
                    },
                    "referencedDeclaration": 24236,
                    "src": "1161:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24236",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1187:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25185,
                  "src": "1179:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:50:16"
            }
          },
          {
            "id": 25230,
            "nodeType": "FunctionDefinition",
            "src": "1633:611:16",
            "body": {
              "id": 25229,
              "nodeType": "Block",
              "src": "1771:473:16",
              "statements": [
                {
                  "expression": {
                    "id": 25215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25201,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25199,
                      "src": "2025:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25133",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25212,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25189,
                          "src": "2104:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24236",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 25213,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25191,
                          "src": "2128:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$24236",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$24236",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2033:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24236_$_t_address_$returns$_t_contract$_AIMVault_$25133_$",
                            "typeString": "function (contract ERC20,address) returns (contract AIMVault)"
                          },
                          "typeName": {
                            "id": 25203,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 25202,
                              "name": "AIMVault",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 25133,
                              "src": "2037:8:16"
                            },
                            "referencedDeclaration": 25133,
                            "src": "2037:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AIMVault_$25133",
                              "typeString": "contract AIMVault"
                            }
                          }
                        },
                        "id": 25211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "salt"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 25207,
                                    "name": "underlying",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25189,
                                    "src": "2060:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$24236",
                                      "typeString": "contract ERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$24236",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "id": 25206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2052:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25205,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2052:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2052:19:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 25209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fillLast12Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24274,
                              "src": "2052:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 25210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2052:37:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "src": "2033:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$24236_$_t_address_$returns$_t_contract$_AIMVault_$25133_$salt",
                          "typeString": "function (contract ERC20,address) returns (contract AIMVault)"
                        }
                      },
                      "id": 25214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2033:111:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25133",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2025:119:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25216,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:119:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25218,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25199,
                        "src": "2174:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AIMVault_$25133",
                          "typeString": "contract AIMVault"
                        }
                      },
                      {
                        "id": 25219,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25189,
                        "src": "2181:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24236",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 25220,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25191,
                        "src": "2193:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AIMVault_$25133",
                          "typeString": "contract AIMVault"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$24236",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25217,
                      "name": "VaultDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25185,
                      "src": "2160:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_AIMVault_$25133_$_t_contract$_ERC20_$24236_$_t_address_$returns$__$",
                        "typeString": "function (contract AIMVault,contract ERC20,address)"
                      }
                    },
                    "id": 25221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25222,
                  "nodeType": "EmitStatement",
                  "src": "2155:45:16"
                },
                {
                  "expression": {
                    "id": 25227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25223,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25164,
                        "src": "2211:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$24236_$_t_contract$_AIMVault_$25133_$",
                          "typeString": "mapping(contract ERC20 => contract AIMVault)"
                        }
                      },
                      "id": 25225,
                      "indexExpression": {
                        "id": 25224,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25189,
                        "src": "2218:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24236",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2211:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25133",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25226,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25199,
                      "src": "2232:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AIMVault_$25133",
                        "typeString": "contract AIMVault"
                      }
                    },
                    "src": "2211:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "id": 25228,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:26:16"
                }
              ]
            },
            "documentation": {
              "id": 25186,
              "nodeType": "StructuredDocumentation",
              "src": "1201:427:16",
              "text": "@notice Deploys a new Vault which supports a specific underlying token.\n @dev This will revert if a Vault that accepts the same underlying token has already been deployed.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return vault The newly deployed Vault contract which accepts the provided underlying token."
            },
            "functionSelector": "3e63576b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25195,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23290,
                  "src": "1736:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1736:9:16"
              }
            ],
            "name": "deployVault",
            "nameLocation": "1642:11:16",
            "parameters": {
              "id": 25194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25189,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "1669:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25230,
                  "src": "1663:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24236",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25187,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24236,
                      "src": "1663:5:16"
                    },
                    "referencedDeclaration": 24236,
                    "src": "1663:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24236",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25191,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "1697:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25230,
                  "src": "1689:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25230,
                  "src": "1713:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:73:16"
            },
            "returnParameters": {
              "id": 25200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25199,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1764:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25230,
                  "src": "1755:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25133",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25197,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25133,
                      "src": "1755:8:16"
                    },
                    "referencedDeclaration": 25133,
                    "src": "1755:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:16:16"
            },
            "scope": 25305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25285,
            "nodeType": "FunctionDefinition",
            "src": "2644:1133:16",
            "body": {
              "id": 25284,
              "nodeType": "Block",
              "src": "2770:1007:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30784646",
                                            "id": 25251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2981:4:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            },
                                            "value": "0xFF"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_255_by_1",
                                              "typeString": "int_const 255"
                                            }
                                          ],
                                          "id": 25250,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2974:6:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes1_$",
                                            "typeString": "type(bytes1)"
                                          },
                                          "typeName": {
                                            "id": 25249,
                                            "name": "bytes1",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2974:6:16",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2974:12:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 25255,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "3064:4:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_VaultFactory_$25305",
                                              "typeString": "contract VaultFactory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_VaultFactory_$25305",
                                              "typeString": "contract VaultFactory"
                                            }
                                          ],
                                          "id": 25254,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3056:7:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 25253,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3056:7:16",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 25256,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3056:13:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 25259,
                                                "name": "underlying",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25234,
                                                "src": "3144:10:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$24236",
                                                  "typeString": "contract ERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$24236",
                                                  "typeString": "contract ERC20"
                                                }
                                              ],
                                              "id": 25258,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3136:7:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 25257,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3136:7:16",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25260,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3136:19:16",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 25261,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "fillLast12Bytes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 24274,
                                          "src": "3136:35:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$bound_to$_t_address_$",
                                            "typeString": "function (address) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3136:37:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "id": 25267,
                                                      "name": "AIMVault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25133,
                                                      "src": "3411:8:16",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25133_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25133_$",
                                                        "typeString": "type(contract AIMVault)"
                                                      }
                                                    ],
                                                    "id": 25266,
                                                    "name": "type",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -27,
                                                    "src": "3406:4:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                      "typeString": "function () pure"
                                                    }
                                                  },
                                                  "id": 25268,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "3406:14:16",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_meta_type_t_contract$_AIMVault_$25133",
                                                    "typeString": "type(contract AIMVault)"
                                                  }
                                                },
                                                "id": 25269,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "creationCode",
                                                "nodeType": "MemberAccess",
                                                "src": "3406:27:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 25272,
                                                    "name": "underlying",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25234,
                                                    "src": "3544:10:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ERC20_$24236",
                                                      "typeString": "contract ERC20"
                                                    }
                                                  },
                                                  {
                                                    "id": 25273,
                                                    "name": "cToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25237,
                                                    "src": "3556:6:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_CErc20_$25390",
                                                      "typeString": "contract CErc20"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_ERC20_$24236",
                                                      "typeString": "contract ERC20"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_contract$_CErc20_$25390",
                                                      "typeString": "contract CErc20"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 25270,
                                                    "name": "abi",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -1,
                                                    "src": "3533:3:16",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_abi",
                                                      "typeString": "abi"
                                                    }
                                                  },
                                                  "id": 25271,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "encode",
                                                  "nodeType": "MemberAccess",
                                                  "src": "3533:10:16",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                    "typeString": "function () pure returns (bytes memory)"
                                                  }
                                                },
                                                "id": 25274,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3533:30:16",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes_memory_ptr",
                                                  "typeString": "bytes memory"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25264,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "3292:3:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 25265,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "3292:16:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 25275,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3292:305:16",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 25263,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "3249:9:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 25276,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3249:378:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25247,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2889:3:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 25248,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2889:16:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 25277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2889:764:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 25246,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "2854:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 25278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2854:821:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 25279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromLast20Bytes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24258,
                              "src": "2854:837:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$bound_to$_t_bytes32_$",
                                "typeString": "function (bytes32) pure returns (address)"
                              }
                            },
                            "id": 25280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2854:839:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2825:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2825:8:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2825:931:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 25243,
                      "name": "AIMVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25133,
                      "src": "2799:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AIMVault_$25133_$",
                        "typeString": "type(contract AIMVault)"
                      }
                    },
                    "id": 25282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:971:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "functionReturnParameters": 25242,
                  "id": 25283,
                  "nodeType": "Return",
                  "src": "2780:990:16"
                }
              ]
            },
            "documentation": {
              "id": 25231,
              "nodeType": "StructuredDocumentation",
              "src": "2250:389:16",
              "text": "@notice Computes a Vault's address from its accepted underlying token.\n @param underlying The ERC20 token that the Vault should accept.\n @param cToken The Compound cToken that the Vault should accept.\n @return The address of a Vault which accepts the provided underlying token.\n @dev The Vault returned may not be deployed yet. Use isVaultDeployed to check."
            },
            "functionSelector": "15006fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultFromUnderlying",
            "nameLocation": "2653:22:16",
            "parameters": {
              "id": 25238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25234,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "2682:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25285,
                  "src": "2676:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$24236",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 25233,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25232,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24236,
                      "src": "2676:5:16"
                    },
                    "referencedDeclaration": 24236,
                    "src": "2676:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$24236",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25237,
                  "mutability": "mutable",
                  "name": "cToken",
                  "nameLocation": "2701:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25285,
                  "src": "2694:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CErc20_$25390",
                    "typeString": "contract CErc20"
                  },
                  "typeName": {
                    "id": 25236,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25235,
                      "name": "CErc20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25390,
                      "src": "2694:6:16"
                    },
                    "referencedDeclaration": 25390,
                    "src": "2694:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CErc20_$25390",
                      "typeString": "contract CErc20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:33:16"
            },
            "returnParameters": {
              "id": 25242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25285,
                  "src": "2756:8:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25133",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25240,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25239,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25133,
                      "src": "2756:8:16"
                    },
                    "referencedDeclaration": 25133,
                    "src": "2756:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:10:16"
            },
            "scope": 25305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25304,
            "nodeType": "FunctionDefinition",
            "src": "4204:124:16",
            "body": {
              "id": 25303,
              "nodeType": "Block",
              "src": "4274:54:16",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25296,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25289,
                              "src": "4299:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AIMVault_$25133",
                                "typeString": "contract AIMVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AIMVault_$25133",
                                "typeString": "contract AIMVault"
                              }
                            ],
                            "id": 25295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4291:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25294,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4291:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4291:14:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "4291:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 25299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4291:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 25300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4320:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4291:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25293,
                  "id": 25302,
                  "nodeType": "Return",
                  "src": "4284:37:16"
                }
              ]
            },
            "documentation": {
              "id": 25286,
              "nodeType": "StructuredDocumentation",
              "src": "3783:416:16",
              "text": "@notice Returns if a Vault at an address has already been deployed.\n @param vault The address of a Vault which may not have been deployed yet.\n @return A boolean indicating whether the Vault has been deployed already.\n @dev This function is useful to check the return values of getVaultFromUnderlying,\n as it does not check that the Vault addresses it computes have been deployed yet."
            },
            "functionSelector": "7d6020f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultDeployed",
            "nameLocation": "4213:15:16",
            "parameters": {
              "id": 25290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25289,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "4238:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 25304,
                  "src": "4229:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AIMVault_$25133",
                    "typeString": "contract AIMVault"
                  },
                  "typeName": {
                    "id": 25288,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25287,
                      "name": "AIMVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25133,
                      "src": "4229:8:16"
                    },
                    "referencedDeclaration": 25133,
                    "src": "4229:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AIMVault_$25133",
                      "typeString": "contract AIMVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4228:16:16"
            },
            "returnParameters": {
              "id": 25293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25304,
                  "src": "4268:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:6:16"
            },
            "scope": 25305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25150,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23327,
              "src": "548:5:16"
            },
            "id": 25151,
            "nodeType": "InheritanceSpecifier",
            "src": "548:5:16"
          }
        ],
        "canonicalName": "VaultFactory",
        "contractDependencies": [
          25133
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 25149,
          "nodeType": "StructuredDocumentation",
          "src": "378:145:16",
          "text": "@title Rari Vault Factory\n @author Transmissions11 and JetJadeja\n @notice Factory which enables deploying a Vault for any ERC20 token."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25305,
          23327
        ],
        "name": "VaultFactory",
        "nameLocation": "532:12:16",
        "scope": 25306,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 16
}